{"version":3,"sources":["components/LoadingScreen/LoadingScreen.js","components/LoginForm/LoginForm.js","components/Home/Home.js","components/Navbar/Navbar.js","components/Profile/Profile.js","components/JobListing/JobListing.js","components/FindJobs/FindJobs.js","components/MyApplications/MyApplications.js","components/CreateListing/CreateListing.js","components/EditableListing/EditableListing.js","components/MyListings/MyListings.js","components/Applications/Applications.js","components/AcceptedEmployees/AcceptedEmployees.js","App.js","reportWebVitals.js","index.js"],"names":["style","display","position","height","width","justifyContent","alignItems","LoadingScreen","className","CircularProgress","size","defaultFormData","name","email","password","contactNo","userType","formType","LoginForm","useState","formData","setFormData","React","useContext","AuthContext","auth","setAuth","onChangeHandler","e","target","value","toString","noValidate","autoComplete","TextField","fullWidth","label","onChange","type","RadioGroup","row","FormControlLabel","control","Radio","Button","variant","color","onClick","data","url","axios","post","headers","then","response","localStorage","setItem","token","JSON","stringify","user","loggedIn","catch","error","msg","swal","href","preventDefault","Home","Navbar","logout","removeItem","window","location","AppBar","Toolbar","flexGrow","Link","component","RouterLink","to","backgroundColor","marginRight","languageList","Profile","bio","education","skills","currInstituteName","currStartYear","currEndYear","currSkill","bioNumWords","words","split","pop","length","Typography","FormControl","multiline","rows","FormHelperText","trim","re","test","Number","newEducation","push","instituteName","startYear","endYear","List","dense","map","edu","ListItem","ListItemText","primary","secondary","IconButton","aria-label","filter","ed","handleEducationDelete","Autocomplete","freeSolo","options","inputValue","onInputChange","newValue","renderInput","params","newSkills","skill","Chip","onDelete","sk","handleSkillDelete","_id","console","log","config","getItem","put","updateUser","marginBottom","defaultListing","id","title","jobType","maxApps","numApps","maxPos","numAccepted","postingDate","deadlineDate","requiredSkills","duration","salary","numRatings","ratingSum","recruiter","applied","JobListing","props","x","listing","editing","setEditing","sop","setSop","sopNumWords","Card","CardContent","Rating","readOnly","float","fontSize","Date","toLocaleString","marginTop","disabled","listingId","applicantId","defaultFilters","searchTerm","wfh","partTime","fullTime","salaryRange","maxDuration","sortField","sortOrder","FindJobs","filters","setFilters","listings","setListings","maxSalary","setMaxSalary","getRating","useEffect","fetchJobs","a","get","allListings","getTime","now","deleted","Math","max","l","myApplications","listingsAppliedTo","applications","application","filteredListings","toLowerCase","indexOf","sort","b","onFilterChange","onCheckBoxChange","checked","placeholder","gutterBottom","FormGroup","Checkbox","Slider","minWidth","valueLabelDisplay","aria-labelledby","min","marks","Select","Array","keys","i","MenuItem","Divider","orientation","flexItem","toDt","dt","toDateString","getColor","status","MyApplications","setRows","updateRatingLocal","newRating","newRows","r","rating","appliedListingIds","ratings","find","recruiterName","closeDate","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","oldRating","updateRating","CreateListing","getDate","d","handleDateChange","newDate","InputLabel","utils","DateFnsUtils","disableToolbar","inputVariant","format","margin","KeyboardButtonProps","NaN","createListing","EditableListing","setListing","deleteListing","delete","reload","validateForm","errors","join","updateListing","marginLeft","MyListings","defaultSort","Applications","setSort","useParams","getApplications","applicants","users","applicant","applicationDate","appDate","updateApplication","applicationId","newStatus","actionButtons","onSortChange","AcceptedEmployees","getEmployees","myRating","updateMyRatingLocal","joiningDate","precision","recruiterId","updateMyRating","defaultAuth","createContext","App","loading","setLoading","parse","setTimeout","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uZAEMA,EAAQ,CACZC,QAAS,OACTC,SAAU,QACVC,OAAQ,OACRC,MAAO,OACPC,eAAgB,SAChBC,WAAY,UAWCC,MARf,WACE,OACE,qBAAKC,UAAU,gBAAgBR,MAAOA,EAAtC,SACE,cAACS,EAAA,EAAD,CAAkBC,KAAM,Q,8FCJxBC,EAAkB,CACtBC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,SAAU,YACVC,SAAU,SAqLGC,MAlLf,WAAsB,IAAD,EACaC,mBAASR,GADtB,mBACZS,EADY,KACFC,EADE,OAEOC,IAAMC,WAAWC,IAAnCC,EAFW,EAEXA,KAAMC,EAFK,EAELA,QAkFRC,EAAkB,SAACC,GACvBP,EAAY,2BACPD,GADM,kBAERQ,EAAEC,OAAOjB,KAAOgB,EAAEC,OAAOC,UAI9B,OACE,sBAAKtB,UAAU,YAAf,UACE,6BAAKY,EAASH,WACd,6BAAKQ,EAAKT,SAASe,aACnB,uBACA,uBACA,uBAAMC,YAAU,EAACC,aAAa,MAA9B,UACwB,WAArBb,EAASH,UACR,qCACE,cAACiB,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,OACNxB,KAAK,OACLkB,MAAOV,EAASR,KAChByB,SAAUV,IAEZ,uBACA,0BAGJ,cAACO,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,QACNxB,KAAK,QACLkB,MAAOV,EAASP,MAChBwB,SAAUV,IAEZ,uBACA,uBACsB,WAArBP,EAASH,UAA8C,aAArBG,EAASJ,UAC1C,qCACE,cAACkB,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,aACNxB,KAAK,YACLkB,MAAOV,EAASL,UAChBsB,SAAUV,IAEZ,uBACA,0BAGJ,cAACO,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,WACNE,KAAK,WACL1B,KAAK,WACLkB,MAAOV,EAASN,SAChBuB,SAAUV,IAEZ,uBACA,uBACA,eAACY,EAAA,EAAD,CACEC,KAAG,EACHV,MAAOV,EAASJ,SAChBJ,KAAK,WACLyB,SAAUV,EAJZ,UAME,cAACc,EAAA,EAAD,CACEX,MAAM,YACNY,QAAS,cAACC,EAAA,EAAD,IACTP,MAAM,cAER,cAACK,EAAA,EAAD,CACEX,MAAM,YACNY,QAAS,cAACC,EAAA,EAAD,IACTP,MAAM,iBAGV,uBACA,cAACQ,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAA8B,SAArB3B,EAASH,SAhKZ,WACZ,IAKI+B,EAAO,CACTnC,MAAOO,EAASP,MAChBC,SAAUM,EAASN,UAEjBmC,EAAG,oBAAgB7B,EAASJ,UAChCkC,IACGC,KAAKF,EAAKD,EAXA,CACXI,QAAS,CACP,eAAgB,sBAUjBC,MAAK,SAACC,GACLC,aAAaC,QAAQ,QAASF,EAASN,KAAKS,OAC5CF,aAAaC,QAAQ,WAAYF,EAASN,KAAKhC,UAC/CuC,aAAaC,QAAQ,OAAQE,KAAKC,UAAUL,EAASN,KAAKY,OAC1DlC,EAAQ,CACNmC,UAAU,EACVD,KAAMN,EAASN,KAAKY,KACpBH,MAAOH,EAASN,KAAKS,MACrBzC,SAAUsC,EAASN,KAAKhC,cAG3B8C,OAAM,SAACC,GACFA,EAAMT,SACJS,EAAMT,SAASN,MACbe,EAAMT,SAASN,KAAKgB,KACtBC,IAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,SAI3CC,IAAK,QAAS,uBAAwB,aAK/B,WACb,IAKIjB,EAAO,CACTnC,MAAOO,EAASP,MAChBC,SAAUM,EAASN,SACnBF,KAAMQ,EAASR,KACfG,UAAWK,EAASL,WAElBkC,EAAG,eAAW7B,EAASJ,UAC3BkC,IACGC,KAAKF,EAAKD,EAbA,CACXI,QAAS,CACP,eAAgB,sBAYjBC,MAAK,SAACC,GACLC,aAAaC,QAAQ,QAASF,EAASN,KAAKS,OAC5CF,aAAaC,QAAQ,WAAYF,EAASN,KAAKhC,UAC/CuC,aAAaC,QAAQ,OAAQE,KAAKC,UAAUL,EAASN,KAAKY,OAC1DlC,EAAQ,CACNmC,UAAU,EACVD,KAAMN,EAASN,KAAKY,KACpBH,MAAOH,EAASN,KAAKS,MACrBzC,SAAUsC,EAASN,KAAKhC,cAG3B8C,OAAM,SAACC,GACFA,EAAMT,SAASN,KAAKgB,IACtBC,IAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,SAEvCC,IAAK,QAAS,uBAAwB,aA0FxC,SAKG7C,EAASH,WAEZ,uBACA,uBACA,oBAAGiD,KAAK,IAAInB,QA9FO,SAACnB,GACxBA,EAAEuC,iBACF9C,EAAY,2BACPV,GADM,IAETM,SAA+B,SAArBG,EAASH,SAAsB,UAAY,YA0FnD,UACwB,SAArBG,EAASH,SAAsB,UAAY,QAD9C,qB,OC9KOmD,MAXf,WACE,OACE,qBAAK5D,UAAU,OAAf,SAGI,cAAC,EAAD,O,kHC6HO6D,MA5Hf,WAAmB,IAAD,EACU/C,IAAMC,WAAWC,IAAnCC,EADQ,EACRA,KAAMC,EADE,EACFA,QAER4C,EAAS,WACbf,aAAagB,WAAW,QACxBhB,aAAagB,WAAW,YACxBhB,aAAagB,WAAW,SACxB7C,EAAQ,CACNmC,UAAU,EACVJ,MAAO,GACPG,KAAM,GACN5C,SAAU,KAEZwD,OAAOC,SAAW,KAIpB,OAAIhD,EAAKoC,UAA8B,cAAlBpC,EAAKT,SAEtB,cAAC0D,EAAA,EAAD,CAAQxE,SAAS,SAAjB,SACE,eAACyE,EAAA,EAAD,CAASnE,UAAU,SAAnB,UACE,oBAAIR,MAAO,CAAE4E,SAAU,GAAvB,+BACA,cAACC,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,IAAhC,SACE,cAACpC,EAAA,EAAD,CACEC,QAAQ,YACR7C,MAAO,CACL8C,MAAO,QACPmC,gBAAiB,mBACjBC,YAAa,IALjB,8BAWF,cAACL,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,cAAhC,SACE,cAACpC,EAAA,EAAD,CACEC,QAAQ,YACR7C,MAAO,CACL8C,MAAO,QACPmC,gBAAiB,mBACjBC,YAAa,IALjB,2BAWF,cAACL,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,qBAAhC,SACE,cAACpC,EAAA,EAAD,CACEC,QAAQ,YACR7C,MAAO,CACL8C,MAAO,QACPmC,gBAAiB,mBACjBC,YAAa,IALjB,kCAWF,cAACL,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,WAAhC,SACE,cAACpC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN9C,MAAO,CACLkF,YAAa,IAJjB,uBAUF,cAACtC,EAAA,EAAD,CAAQE,MAAM,YAAYD,QAAQ,YAAYE,QAASuB,EAAvD,yBAMG7C,EAAKoC,UAA8B,cAAlBpC,EAAKT,SAE7B,cAAC0D,EAAA,EAAD,CAAQxE,SAAS,SAAjB,SACE,eAACyE,EAAA,EAAD,CAASnE,UAAU,SAAnB,UACE,oBAAIR,MAAO,CAAE4E,SAAU,GAAvB,+BACA,cAACC,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,IAAhC,SACE,cAACpC,EAAA,EAAD,CACEC,QAAQ,YACR7C,MAAO,CACL8C,MAAO,QACPmC,gBAAiB,mBACjBC,YAAa,IALjB,yBAWF,cAACL,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,kBAAhC,SACE,cAACpC,EAAA,EAAD,CACEC,QAAQ,YACR7C,MAAO,CACL8C,MAAO,QACPmC,gBAAiB,mBACjBC,YAAa,IALjB,+BAWF,cAACL,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,WAAhC,SACE,cAACpC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN9C,MAAO,CACLkF,YAAa,IAJjB,uBAUF,cAACtC,EAAA,EAAD,CAAQE,MAAM,YAAYD,QAAQ,YAAYE,QAASuB,EAAvD,yBAMM,MCrFVa,G,OAAe,CACnB,SACA,IACA,aACA,MACA,OACA,MACA,OACA,OACA,SACA,QAyUaC,MAtUf,WAAoB,IAAD,EACS9D,IAAMC,WAAWC,IAAnCC,EADS,EACTA,KAAMC,EADG,EACHA,QADG,EAGeP,mBAAS,CACvCP,KAAMa,EAAKmC,KAAKhD,KAChBC,MAAOY,EAAKmC,KAAK/C,MACjBE,UAAWU,EAAKmC,KAAK7C,UACrBsE,IAAK5D,EAAKmC,KAAKyB,IACfC,UAAW7D,EAAKmC,KAAK0B,UACrBC,OAAQ9D,EAAKmC,KAAK2B,OAClBvE,SAAUS,EAAKT,SACfwE,kBAAmB,GACnBC,cAAe,GACfC,YAAa,GACbC,UAAW,KAdI,mBAGVvE,EAHU,KAGAC,EAHA,KAiBXM,EAAkB,SAACC,GACvBP,EAAY,2BACPD,GADM,kBAERQ,EAAEC,OAAOjB,KAAOgB,EAAEC,OAAOC,UAIxB8D,EAAc,WAClB,IAAIC,EAAQzE,EAASiE,IAAIS,MAAM,OAE/B,OADAD,EAAME,MACCF,EAAMG,QA8Gf,OACE,qCACE,cAAC,EAAD,IACA,sBAAKxF,UAAU,UAAf,UACE,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBAAf,SACE,cAACyF,EAAA,EAAD,CAAYpD,QAAQ,KAApB,uBAEF,sBAAKrC,UAAU,eAAf,UACE,cAACyF,EAAA,EAAD,CAAYpD,QAAQ,KAApB,2BACA,uBACA,uBAAMZ,aAAa,MAAnB,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTU,QAAQ,WACRT,MAAM,OACNxB,KAAK,OACLkB,MAAOV,EAASR,KAChByB,SAAUV,IAEZ,uBACA,uBACA,cAACO,EAAA,EAAD,CACEC,WAAS,EACTU,QAAQ,WACRT,MAAM,QACNxB,KAAK,QACLkB,MAAOV,EAASP,MAChBwB,SAAUV,IAEZ,uBACA,uBACsB,aAArBP,EAASJ,UACR,qCACE,cAACkB,EAAA,EAAD,CACEC,WAAS,EACTU,QAAQ,WACRT,MAAM,aACNxB,KAAK,YACLkB,MAAOV,EAASL,UAChBsB,SAAUV,IAEZ,uBACA,0BAGkB,aAArBP,EAASJ,UACR,qCACE,eAACkF,EAAA,EAAD,CAAa/D,WAAS,EAAtB,UACE,cAACD,EAAA,EAAD,CACEC,WAAS,EACTU,QAAQ,WACRsD,WAAS,EACTC,KAAK,IACLhE,MAAM,MACNxB,KAAK,MACLkB,MAAOV,EAASiE,IAChBhD,SAAUV,IAEZ,eAAC0E,EAAA,EAAD,WAAiBT,IAAjB,aAEF,uBACA,6BAIN,uBACA,uBACsB,aAArBxE,EAASJ,UACR,qCACE,cAACiF,EAAA,EAAD,CAAYpD,QAAQ,KAApB,uBACA,uBACA,sBAAKrC,UAAU,gBAAf,UACE,cAAC0B,EAAA,EAAD,CACEW,QAAQ,WACRT,MAAM,iBACNxB,KAAK,oBACLkB,MAAOV,EAASoE,kBAChBnD,SAAUV,IAEZ,cAACO,EAAA,EAAD,CACEW,QAAQ,WACRT,MAAM,aACNxB,KAAK,gBACLkB,MAAOV,EAASqE,cAChBpD,SAAUV,IAEZ,cAACO,EAAA,EAAD,CACEW,QAAQ,WACRT,MAAM,WACNxB,KAAK,cACLkB,MAAOV,EAASsE,YAChBrD,SAAUV,IAEZ,cAACiB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAxLK,WACnB,IAAK3B,EAASoE,kBAAkBc,OAC9B,OAAOrC,IAAK,QAAS,2BAA4B,SAEnD,IAAIsC,EAAK,iBAGT,IAAKA,EAAGC,KAAKpF,EAASqE,eACpB,OAAOxB,IAAK,QAAS,qBAAsB,SAE7C,GAAIwC,OAAOrF,EAASqE,eAAiB,KACnC,OAAOxB,IAAK,QAAS,qBAAsB,SAG7C,GAAoC,KAAhC7C,EAASsE,YAAYY,OAAe,CACtC,IAAKC,EAAGC,KAAKpF,EAASsE,aACpB,OAAOzB,IAAK,QAAS,mBAAoB,SAE3C,GAAIwC,OAAOrF,EAASsE,aAAee,OAAOrF,EAASqE,eACjD,OAAOxB,IAAK,QAAS,8BAA+B,SAExD,IAAIyC,EAAetF,EAASkE,UAC5BoB,EAAaC,KAAK,CAChBC,cAAexF,EAASoE,kBACxBqB,UAAWzF,EAASqE,cACpBqB,QAAS1F,EAASsE,cAEpBrE,EAAY,2BACPD,GADM,IAETkE,UAAWoB,EACXlB,kBAAmB,GACnBE,YAAa,GACbD,cAAe,OAqJL,oBAQF,cAACsB,EAAA,EAAD,CAAMvG,UAAU,gBAAgBwG,OAAK,EAArC,SACG5F,EAASkE,UAAU2B,KAAI,SAACC,GACvB,OACE,eAACC,EAAA,EAAD,WAGE,cAACC,EAAA,EAAD,CACEC,QAASH,EAAIN,cACbU,UAAS,UAAKJ,EAAIL,UAAT,YAAsBK,EAAIJ,WAErC,cAACS,EAAA,EAAD,CACEC,aAAW,SACXzE,QAAS,kBArKD,SAACmE,GAC7B,IAAIR,EAAetF,EAASkE,UAAUmC,QAAO,SAACC,GAAD,OAAQA,IAAOR,KAC5D7F,EAAY,2BACPD,GADM,IAETkE,UAAWoB,KAiKsBiB,CAAsBT,IAFvC,iBAPF,UACUA,EAAIN,eADd,OAC8BM,EAAIL,UADlC,YAC+CK,EAAIJ,eAgBzD,uBACA,uBAEA,cAACb,EAAA,EAAD,CAAYpD,QAAQ,KAApB,oBACA,uBACA,sBAAKrC,UAAU,YAAf,UACE,cAACoH,EAAA,EAAD,CACEC,UAAQ,EACRC,QAAS3C,EACTvE,KAAK,YACLmH,WAAY3G,EAASuE,UACrBqC,cAAe,SAACpG,EAAGqG,GACjB5G,EAAY,2BAAKD,GAAN,IAAgBuE,UAAWsC,MAExCC,YAAa,SAACC,GAAD,OACX,cAACjG,EAAA,EAAD,2BAAeiG,GAAf,IAAuB/F,MAAM,QAAQS,QAAQ,iBAGjD,cAACD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAvPzC,WACf,IAAK3B,EAASuE,UAAUW,OACtB,OAAOrC,IAAK,QAAS,uBAAwB,SAC/C,IAAImE,EAAYhH,EAASmE,OACzB6C,EAAUzB,KAAKvF,EAASuE,WACxBtE,EAAY,2BACPD,GADM,IAETmE,OAAQ6C,EACRzC,UAAW,OA+OD,oBAIF,uBACCvE,EAASmE,OAAO0B,KAAI,SAACoB,GACpB,OACE,qCACE,cAACC,EAAA,EAAD,CACE9H,UAAU,YAEV4B,MAAOiG,EACPE,SAAU,kBAvPJ,SAACF,GACzB,IAAID,EAAYhH,EAASmE,OAAOkC,QAAO,SAACe,GAAD,OAAQA,IAAOH,KACtDhH,EAAY,2BACPD,GADM,IAETmE,OAAQ6C,KAmPwBK,CAAkBJ,KAF7BA,GAIP,+BAIN,uBACA,uBACA,uBACA,0BAIJ,cAACzF,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAzLW,WAGnB,IADc,eACDyD,KAAKpF,EAASP,OACzB,OAAOoD,IAAK,QAAS,gBAAiB,SAExC,GAA0B,cAAtB7C,EAASJ,SAA0B,CAErC,IADc,WACDwF,KAAKpF,EAASL,WACzB,OAAOkD,IAAK,QAAS,qBAAsB,SAC7C,GAAI2B,IAAgB,IAClB,OAAO3B,IAAK,QAAS,kCAAmC,UArC3C,WACjB,IAAIhB,EAAG,eAAWxB,EAAKT,SAAhB,YAA4BS,EAAKmC,KAAK8E,IAAI3G,YACjD4G,QAAQC,IAAI3F,GACZ,IAAI4F,EAAS,CACXzF,QAAS,CACP,eAAgB,mBAChB,eAAgBG,aAAauF,QAAQ,WAGrC9F,EAAO5B,EACX8B,IACG6F,IAAI9F,EAAKD,EAAM6F,GACfxF,MAAK,SAACC,GACLW,IAAK,eAAgB,GAAI,WACzBV,aAAaC,QAAQ,OAAQE,KAAKC,UAAUL,EAASN,KAAKY,OAC1DlC,EAAQ,2BAAKD,GAAN,IAAYmC,KAAMN,EAASN,KAAKY,WAExCE,OAAM,SAACC,GACFA,EAAMT,SAASN,KAAKgB,IACtBC,IAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,SAEvCC,IAAK,QAAS,uBAAwB,YAmB5C+E,IA4KQhJ,MAAO,CAAEkF,YAAa,GAAI+D,aAAc,KAJ1C,oBAQA,cAACrG,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,QAAS,kBAAOyB,OAAOC,SAAW,KAClCzE,MAAO,CAAEkF,YAAa,GAAI+D,aAAc,KAJ1C,oBAQA,uBACA,iC,mHC5WJC,GAAiB,CACrBC,GAAI,SACJC,MAAO,YACPC,QAAS,YACTC,QAAS,GACTC,QAAS,EACTC,OAAQ,GACRC,YAAa,EACbC,YAAa,cACbC,aAAc,cACdC,eAAgB,CAAC,SAAU,eAAgB,cAC3CC,SAAU,EACVC,OAAQ,IACRC,WAAY,EACZC,UAAW,GACXC,UAAW,CACTd,GAAI,UACJvI,KAAM,iBACNC,MAAO,+BAETqJ,SAAS,GA4LIC,OApLf,SAAoBC,GAAQ,IALhBC,EAKe,EACKlJ,mBAC5BiJ,EAAME,QAAUF,EAAME,QAAUpB,IAFT,mBAClBoB,EADkB,aAIKnJ,oBAAS,IAJd,mBAIlBoJ,EAJkB,KAITC,EAJS,OAKHrJ,mBAAS,IALN,mBAKlBsJ,EALkB,KAKbC,EALa,OAMCpJ,IAAMC,WAAWC,IAAnCC,EANiB,EAMjBA,KAEFkJ,GARmB,EAMXjJ,QAEM,WAClB,IAAImE,EAAQ4E,EAAI3E,MAAM,OAEtB,OADAD,EAAME,MACCF,EAAMG,SAuCf,OACE,mCACE,cAAC4E,EAAA,EAAD,CAAM5K,MAAO,CAAEiJ,aAAc,IAA7B,SACE,eAAC4B,EAAA,EAAD,WACE,gCACE,cAAC5E,EAAA,EAAD,CAAYpD,QAAQ,KAAKC,MAAM,cAAc7C,QAAQ,SAArD,SACGqK,EAAQlB,QAEX,cAAC0B,GAAA,EAAD,CACEC,UAAQ,EACRjJ,MAAOwI,EAAQN,UAAYM,EAAQP,WACnC/J,MAAO,CAAEgL,MAAO,cAGpB,eAAC/E,EAAA,EAAD,CAAYjG,MAAO,CAAEiJ,cAAe,GAAKnG,MAAM,gBAA/C,uBACa,IACX,uBAAM9C,MAAO,CAAE8C,MAAO,UAAWmI,SAAU,UAA3C,UACGX,EAAQL,UAAUrJ,KAAM,UAG7B,cAACqF,EAAA,EAAD,CAAYnD,MAAM,cAAc9C,MAAO,CAAEiJ,cAAe,GAAxD,SACGqB,EAAQjB,UAEX,eAACpD,EAAA,EAAD,CAAYnD,MAAM,gBAAgB9C,MAAO,CAAEiJ,cAAe,GAA1D,sBACY,IACY,IAArBqB,EAAQT,SACL,aADH,UAEMS,EAAQT,SAFd,cAIH,eAAC5D,EAAA,EAAD,CAAYnD,MAAM,gBAAgB9C,MAAO,CAAEiJ,aAAc,GAAzD,kCACwBqB,EAAQd,OAASc,EAAQb,eAEjD,qBAAKzJ,MAAO,CAAEiJ,aAAc,GAA5B,SACGqB,EAAQV,eAAe3C,KAAI,SAACoB,GAC3B,OACE,qCACE,cAACC,EAAA,EAAD,CAAkBlG,MAAOiG,GAAdA,GAAwB,YAK3C,eAACpC,EAAA,EAAD,CACEpD,QAAQ,KACR7C,MAAO,CAAE8C,MAAO,aAAcmG,cAAe,GAF/C,mBAIIqB,EAAQR,UAGZ,uBAAM9J,MAAO,CAAE8C,MAAO,MAAOmI,SAAU,IAAvC,2BAvGEZ,EAwGiBC,EAAQX,aAvG3B,IAAIuB,KAAKb,GACRc,qBAwGAZ,GACC,eAACrE,EAAA,EAAD,CAAa/D,WAAS,EAACnC,MAAO,CAAEoL,UAAW,IAA3C,UACE,cAAClJ,EAAA,EAAD,CACEC,WAAS,EACTU,QAAQ,WACRsD,WAAS,EACTC,KAAK,IACLhE,MAAM,uBACNxB,KAAK,MACLkB,MAAO2I,EACPpI,SAAU,SAACT,GAAD,OAAO8I,EAAO9I,EAAEC,OAAOC,UAEnC,eAACuE,EAAA,EAAD,WAAiBsE,IAAjB,cAGFJ,GACA,cAAC3H,EAAA,EAAD,CACEC,QAAQ,YACR7C,MAAO,CACLgL,MAAO,QACPlI,MAAO,QACPmG,aAAc,GACdhE,gBAAiBqF,EAAQJ,QACrB,UACAI,EAAQd,OAASc,EAAQb,YAAc,GACvCa,EAAQhB,QAAUgB,EAAQf,QAAU,EACpC,UACA,aAENtJ,QAAQ,SACRoL,SACEf,EAAQJ,WACNI,EAAQd,OAASc,EAAQb,gBACzBa,EAAQhB,QAAUgB,EAAQf,SAE9BxG,QAAS,kBAAMyH,GAAW,IAnB5B,SAqBGF,EAAQJ,QACL,UACAI,EAAQd,OAASc,EAAQb,YAAc,GACvCa,EAAQhB,QAAUgB,EAAQf,QAAU,EACpC,QACA,SAGPgB,GACC,qCACE,cAAC3H,EAAA,EAAD,CACEC,QAAQ,YACR7C,MAAO,CACLgL,MAAO,QACP/B,aAAc,GACdnG,MAAO,QACPmC,gBAAiB,cAEnBlC,QA9IU,WACtB,GAAI4H,KAAiB,IACnB,OAAO1G,IAAK,QAAS,kCAAmC,SAE1D,IACI4E,EAAS,CACXzF,QAAS,CACP,eAAgB,mBAChB,eAAgBG,aAAauF,QAAQ,WAGrC9F,EAAO,CACTsI,UAAWhB,EAAQ5B,IACnB6C,YAAa9J,EAAKmC,KAAK8E,IACvB+B,IAAKA,GAEPvH,IACGC,KAbO,mBAaGH,EAAM6F,GAChBxF,MAAK,WACJ,OAAOY,IAAK,gCAAiC,GAAI,WAAWZ,MAC1D,kBAAOmB,OAAOC,SAAW,UAG5BX,OAAM,SAACC,GACFA,EAAMT,SACJS,EAAMT,SAASN,MACbe,EAAMT,SAASN,KAAKgB,KACtBC,IAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,SAI3CC,IAAK,QAAS,uBAAwB,aAuGlC,qBAaA,cAACrB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACN9C,MAAO,CAAEgL,MAAO,QAAS/B,aAAc,GAAI/D,YAAa,IACxDnC,QAAS,WACP2H,EAAO,IACPF,GAAW,IANf,+BCrLRgB,I,OAAiB,CACrBC,WAAY,GACZC,KAAK,EACLC,UAAU,EACVC,UAAU,EACVC,YAAa,CAAC,EAAG,KACjBC,YAAa,EACbC,UAAW,SACXC,UAAW,eA4REC,OAzRf,WAAqB,IAAD,EACY9K,mBAASqK,IADrB,mBACXU,EADW,KACFC,EADE,OAEchL,mBAAS,IAFvB,mBAEXiL,EAFW,KAEDC,EAFC,OAGgBlL,mBAAS,KAHzB,mBAGXmL,EAHW,KAGAC,EAHA,OAIQjL,IAAMC,WAAWC,IAAnCC,EAJU,EAIVA,KAEF+K,GANY,EAIJ9K,QAEI,SAAC4I,GACjB,OAA2B,IAAvBA,EAAQP,WAAyB,EACzBO,EAAQN,UAAYM,EAAQP,aAG1C0C,qBAAU,WACRN,EAAW,2BACND,GADK,IAERL,YAAa,CAACK,EAAQL,YAAY,GAAIS,EAAY,UAEnD,CAACA,IAEJ,IAAMI,EAAS,uCAAG,kCAAAC,EAAA,+EAEUzJ,IAAM0J,IAAI,gBAFpB,cAKdC,GAFAA,GADIA,EAFU,QAGY7J,KAAKoJ,UAEL3E,QAAO,SAAC6C,GAEhC,OADQ,IAAIY,KAAKZ,EAAQX,cAChBmD,UAAY5B,KAAK6B,QAAUzC,EAAQ0C,WAE9CT,EAAaU,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,EAAY5F,KAAI,SAACkG,GAAD,OAAOA,EAAErD,WAAjC,QAA0C,MAT7C,SAWa5G,IAAM0J,IAAN,uCACOnL,EAAKmC,KAAK8E,MAZ9B,OAWV0E,EAXU,OAcVC,EAAoBD,EAAepK,KAAKsK,aAAarG,KACvD,SAACsG,GAAD,OAAiBA,EAAYjC,aAoB/BkC,GAhBIA,EAAmBX,EAAYpF,QAAO,SAAC6C,GACzC,OAI2D,IAHzDA,EAAQlB,MACL9C,OACAmH,cACAC,QAAQxB,EAAQT,WAAWnF,OAAOmH,gBACrCnD,EAAQR,QAAUoC,EAAQL,YAAY,IACtCvB,EAAQR,QAAUoC,EAAQL,YAAY,IACtCvB,EAAQT,SAAWqC,EAAQJ,cACL,cAApBxB,EAAQjB,SAA2B6C,EAAQN,UACtB,cAApBtB,EAAQjB,SAA2B6C,EAAQP,UACvB,QAApBrB,EAAQjB,SAAqB6C,EAAQR,SAKRzE,KAAI,SAACqD,GAIvC,OAHgD,IAA5C+C,EAAkBK,QAAQpD,EAAQ5B,KACpC4B,EAAQJ,SAAU,EACfI,EAAQJ,SAAU,EAChBI,KAIiB,WAAtB4B,EAAQH,UACgB,cAAtBG,EAAQF,UACVwB,EAAiBG,MAAK,SAAChB,EAAGiB,GAAJ,OACpBpB,EAAUG,GAAKH,EAAUoB,IAAM,EAAI,KAGrCJ,EAAiBG,MAAK,SAAChB,EAAGiB,GAAJ,OACpBpB,EAAUG,GAAKH,EAAUoB,IAAM,EAAI,KAIb,cAAtB1B,EAAQF,UACVwB,EAAiBG,MAAK,SAAChB,EAAGiB,GAAJ,OACpBjB,EAAET,EAAQH,WAAa6B,EAAE1B,EAAQH,YAAc,EAAI,KAGrDyB,EAAiBG,MAAK,SAAChB,EAAGiB,GAAJ,OACpBjB,EAAET,EAAQH,WAAa6B,EAAE1B,EAAQH,YAAc,EAAI,KAKzDM,EAAYmB,GACZ7E,QAAQC,IAAI4E,GAlEE,kDAoEd7E,QAAQC,IAAR,MApEc,0DAAH,qDAwEf6D,oBAAUC,EAAW,IAErB,IAAMmB,EAAiB,SAACjM,GACtBuK,EAAW,2BACND,GADK,kBAEPtK,EAAEC,OAAOjB,KAAOgB,EAAEC,OAAOC,UAIxBgM,EAAmB,SAAClM,GACxBuK,EAAW,2BACND,GADK,kBAEPtK,EAAEC,OAAOjB,KAAOgB,EAAEC,OAAOkM,YAY9B,OACE,qCACE,cAAC,EAAD,IACA,sBAAKvN,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wCACA,cAAC0B,EAAA,EAAD,CACEC,WAAS,EACTU,QAAQ,WACRjC,KAAK,aACLoN,YAAY,cACZlM,MAAOoK,EAAQT,WACfpJ,SAAUwL,IAEZ,uBACA,uBACA,uBAEA,yCACA,eAAC3H,EAAA,EAAD,CAAapB,UAAU,WAAvB,UACE,cAACmB,EAAA,EAAD,CAAYgI,cAAY,EAAxB,sBACA,eAACC,EAAA,EAAD,WACE,cAACzL,EAAA,EAAD,CACEC,QACE,cAACyL,EAAA,EAAD,CACEJ,QAAS7B,EAAQN,SACjBvJ,SAAUyL,EACVlN,KAAK,aAGTwB,MAAM,cAER,cAACK,EAAA,EAAD,CACEC,QACE,cAACyL,EAAA,EAAD,CACEJ,QAAS7B,EAAQP,SACjBtJ,SAAUyL,EACVlN,KAAK,aAGTwB,MAAM,cAER,cAACK,EAAA,EAAD,CACEC,QACE,cAACyL,EAAA,EAAD,CACEJ,QAAS7B,EAAQR,IACjBrJ,SAAUyL,EACVlN,KAAK,QAGTwB,MAAM,yBAIZ,uBACA,uBACA,eAAC8D,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAYgI,cAAY,EAAxB,gCACA,uBACA,cAACG,EAAA,EAAD,CACEpO,MAAO,CAAEqO,SAAU,KACnBvM,MAAOoK,EAAQL,YACfxJ,SAtEgB,SAACT,EAAGqG,GAC9BU,QAAQC,IAAIX,GACZkE,EAAW,2BACND,GADK,IAERL,YAAa5D,MAmELrH,KAAK,cACL0N,kBAAkB,OAClBC,kBAAgB,eAChBC,IAAK,EACLtB,IAAKZ,EAAY,IACjBmC,MAAO,CACL,CAAE3M,MAAO,EAAGM,MAAO,KACnB,CACEN,OAAQwK,EAAY,KAAQ,EAC5BlK,QAASkK,EAAY,KAAQ,GAAGvK,YAElC,CACED,MAAOwK,EAAY,IACnBlK,OAAQkK,EAAY,KAAMvK,kBAKlC,uBACA,uBACA,eAACmE,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAYgI,cAAY,EAAxB,yCACA,cAACS,EAAA,EAAD,CACE9N,KAAK,cACLkB,MAAOoK,EAAQJ,YACfzJ,SAAUwL,EAHZ,SAKG,YAAIc,MAAM,GAAGC,QAAQ3H,KAAI,SAAC4H,GAAD,OACxB,cAACC,EAAA,EAAD,CAAUhN,MAAO+M,EAAI,EAArB,SACGA,EAAI,GADsBA,EAAI,WAMvC,uBACA,uBACA,uBAEA,yCACA,eAACH,EAAA,EAAD,CACE9N,KAAK,YACLkB,MAAOoK,EAAQH,UACf1J,SAAUwL,EAHZ,UAKE,cAACiB,EAAA,EAAD,CAAUhN,MAAM,SAAhB,oBACA,cAACgN,EAAA,EAAD,CAAUhN,MAAM,WAAhB,sBACA,cAACgN,EAAA,EAAD,CAAUhN,MAAM,SAAhB,uBAEF,eAACS,EAAA,EAAD,CACEC,KAAG,EACHV,MAAOoK,EAAQF,UACfpL,KAAK,YACLyB,SAAUwL,EAJZ,UAME,cAACpL,EAAA,EAAD,CACEX,MAAM,YACNY,QAAS,cAACC,EAAA,EAAD,IACTP,MAAM,cAER,cAACK,EAAA,EAAD,CACEX,MAAM,aACNY,QAAS,cAACC,EAAA,EAAD,IACTP,MAAM,kBAGV,uBACA,uBACA,uBACA,sBAAK5B,UAAU,gBAAf,UACE,cAACoC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN9C,MAAO,CAAEkF,YAAa,IACtBnC,QAAS2J,EAJX,mBAQA,cAAC9J,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,QAAS,kBAAMoJ,EAAWX,KAH5B,yBASJ,cAACuD,EAAA,EAAD,CACEC,YAAY,WACZC,UAAQ,EACRjP,MAAO,CAAEE,SAAU,QAASC,OAAQ,UAEtC,sBAAKK,UAAU,OAAf,UACE,cAACyF,EAAA,EAAD,CAAYpD,QAAQ,KAAKoL,cAAY,EAArC,qBAGC7B,EAASnF,KAAI,SAACqD,GAAD,OACZ,cAAC,GAAD,CAA8BA,QAASA,GAAtBA,EAAQ5B,kB,sEClS/BwG,I,OAAO,SAACC,GACZ,OAAKA,EACG,IAAIjE,KAAKiE,GACRC,eAFO,OAKZC,GAAW,SAACC,GAChB,OAAQA,GACN,IAAK,UACH,MAAO,QACT,IAAK,cACH,MAAO,OACT,IAAK,WACH,MAAO,MACT,IAAK,WACH,MAAO,UAoNEC,OAjKf,WAA2B,IAAD,EACApO,mBAAS,IADT,mBACjBiF,EADiB,KACXoJ,EADW,OAEElO,IAAMC,WAAWC,IAAnCC,EAFgB,EAEhBA,KAEFgO,GAJkB,EAEV/N,QAEY,SAACc,EAAKkN,GAC9B,IAAIC,EAAUvJ,EAAKa,KAAI,SAAC2I,GAEtB,OADIA,EAAEzG,KAAO3G,EAAI2G,KAAIyG,EAAEC,OAASH,GACzBE,KAETJ,EAAQG,KA2FV,OAnDAlD,oBAAS,sBAAC,oCAAAE,EAAA,+EAEmBzJ,IAAM0J,IAAN,uCACSnL,EAAKmC,KAAK8E,MAHtC,cAKN4E,GAHIA,EAFE,QAKsBtK,KAAKsK,aACjC3E,QAAQC,IAAI0E,GACRwC,EAAoBxC,EAAarG,KACnC,SAACsG,GAAD,OAAiBA,EAAYjC,aARzB,SAWepI,IAAM0J,IAAI,eAXzB,cAYNR,GADIA,EAXE,QAYcpJ,KAAKoJ,SAAS3E,QAChC,SAAC6C,GAAD,OAAyD,IAA5CwF,EAAkBpC,QAAQpD,EAAQ5B,QAb3C,UAgBcxF,IAAM0J,IAAN,0CACiBnL,EAAKmC,KAAK8E,MAjBzC,QAmBNqH,GAHIA,EAhBE,QAmBY/M,KAAK+M,QAGnB3J,EAAOkH,EAAarG,KAAI,SAACsG,GAC3B,IAAIjD,EAAU8B,EAAS4D,MAAK,SAAC7C,GAAD,OAAOA,EAAEzE,MAAQ6E,EAAYjC,aACrDuE,EAAS,EAmBb,OAlBIE,IAASF,EAASE,EAAQC,MAAK,SAACJ,GAAD,OAAOA,EAAEtE,YAAchB,EAAQ5B,QAClEC,QAAQC,IAAIiH,GACF,CACR1G,GAAIoE,EAAY7E,IAChBU,MAAOkB,EAAQlB,MACf6G,cAAe3F,EAAQL,UAAUrJ,KACjC0O,OAAQ/B,EAAY+B,OACpBxF,OAAQQ,EAAQR,OAChBoG,UAAW3C,EAAY2C,UACvBL,OAAQA,EAASA,EAAO/N,MAAQ,EAChCwJ,UAAWhB,EAAQ5B,QAUvB8G,EAAQpJ,GA7CF,kDA+CNuC,QAAQC,IAAR,MA/CM,0DAiDP,IAGD,qCACE,cAAC,EAAD,IACA,sBAAKpI,UAAU,iBAAf,UACE,cAACyF,EAAA,EAAD,CAAYpD,QAAQ,KAAKoL,cAAY,EAArC,6BAGA,uBACA,uBACA,cAACkC,GAAA,EAAD,CAAgBrL,UAAWsL,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO7P,UAAU,mBAAjB,UACE,cAAC8P,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,CAAWC,MAAM,QAAjB,4BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,8BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,6BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,uBAGJ,cAACC,GAAA,EAAD,UACGtK,EAAKa,KAAI,SAACzE,GAAD,OACR,eAAC+N,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW1L,UAAU,KAAK6L,MAAM,MAAhC,SACGnO,EAAI4G,QAEP,cAACoH,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BjO,EAAIyN,gBAC9B,cAACO,GAAA,EAAD,CACEC,MAAM,QACNzQ,MAAO,CAAE8C,MAAOuM,GAAS7M,EAAI8M,SAF/B,SAIG9M,EAAI8M,SAEP,eAACkB,GAAA,EAAD,CAAWC,MAAM,QAAjB,mBAA2BjO,EAAIsH,UAC/B,cAAC0G,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACkB,aAAfjO,EAAI8M,OAAwBJ,GAAK1M,EAAI0N,WAAa,OAErD,cAACM,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACkB,aAAfjO,EAAI8M,OACH,cAACxE,GAAA,EAAD,CACEhJ,MAAOU,EAAIqN,OACXjP,KAAM4B,EAAI2G,GACV9G,SAAU,SAACT,EAAG8N,GAAJ,OAnIX,SAAClN,EAAKkN,GACzB,IAAIkB,EAAYpO,EAAIqN,OACpBJ,EAAkBjN,EAAKkN,GACvB,IACI1M,EAAO,CACTlB,MAAO4N,EACPpE,UAAW9I,EAAI8I,UACfC,YAAa9J,EAAKmC,KAAK8E,KAErBG,EAAS,CACXzF,QAAS,CACP,eAAgB,mBAChB,eAAgBG,aAAauF,QAAQ,WAGzC5F,IACGC,KAbO,sBAaGH,EAAM6F,GAChBxF,MAAK,SAACC,GACLW,IAAK,iBAAkB,GAAI,cAE5BH,OAAM,SAACC,GACFA,EAAMT,SACJS,EAAMT,SAASN,MACbe,EAAMT,SAASN,KAAKgB,KACtBC,IAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,SAASX,MAAK,kBACnDoM,EAAkBjN,EAAKoO,MAK7B3M,IAAK,QAAS,uBAAwB,SAASZ,MAAK,kBAClDoM,EAAkBjN,EAAKoO,SAqGTC,CAAarO,EAAKkN,MAItB,SAzBSlN,EAAI2G,qB,gDCtL7BxI,I,OAAkB,CACtByI,MAAO,GACPQ,eAAgB,GAChBjE,UAAW,GACX0D,QAAS,YACTC,QAAS,EACTE,OAAQ,EACRK,SAAU,EACVC,OAAQ,IACRH,aAAcuB,KAAK6B,QAGf5H,GAAe,CACnB,SACA,IACA,aACA,MACA,OACA,MACA,OACA,OACA,SACA,OAoRa2L,OAjRf,WAA0B,IAAD,EACS3P,mBAASR,IADlB,mBAChBS,EADgB,KACNC,EADM,OAEGC,IAAMC,WAAWC,IAAnCC,EAFe,EAEfA,KAsBFsP,GAxBiB,EAETrP,QAsBE,SAACsP,GAEf,OADS,IAAI9F,KAAK8F,KAIdrP,EAAkB,SAACC,GACvBP,EAAY,2BACPD,GADM,kBAERQ,EAAEC,OAAOjB,KAAOgB,EAAEC,OAAOC,UAIxBmP,EAAmB,SAACC,GACxB7P,EAAY,2BACPD,GADM,IAETuI,aAAcuH,MAmElB,OACE,qCACE,cAAC,EAAD,IACA,sBAAK1Q,UAAU,gBAAf,UACE,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,uBAAf,SACE,cAACyF,EAAA,EAAD,CAAYpD,QAAQ,KAApB,8BAEF,sBAAKrC,UAAU,qBAAf,UACE,uBAAMyB,aAAa,MAAnB,UACE,cAACC,EAAA,EAAD,CACEW,QAAQ,WACRT,MAAM,YACNxB,KAAK,QACLkB,MAAOV,EAASgI,MAChB/G,SAAUV,EACVnB,UAAU,gBAEZ,eAAC0F,EAAA,EAAD,CAAarD,QAAQ,WAAWrC,UAAU,cAA1C,UACE,cAAC2Q,GAAA,EAAD,uBACA,eAACzC,EAAA,EAAD,CACE9N,KAAK,UACLkB,MAAOV,EAASiI,QAChBhH,SAAUV,EACVS,MAAM,WAJR,UAME,cAAC0M,EAAA,EAAD,CAAUhN,MAAM,YAAhB,uBACA,cAACgN,EAAA,EAAD,CAAUhN,MAAM,YAAhB,uBACA,cAACgN,EAAA,EAAD,CAAUhN,MAAM,MAAhB,kCAGJ,eAACoE,EAAA,EAAD,CAAarD,QAAQ,WAAWrC,UAAU,cAA1C,UACE,cAAC2Q,GAAA,EAAD,uBACA,cAACzC,EAAA,EAAD,CACE9N,KAAK,WACLkB,MAAOV,EAASyI,SAChBxH,SAAUV,EACVS,MAAM,mBAJR,SAMG,YAAIuM,MAAM,GAAGC,QAAQ3H,KAAI,SAAC4H,GAAD,OACxB,eAACC,EAAA,EAAD,CAAUhN,MAAO+M,EAAjB,UACGA,GACCA,GAAK,iBAFgBA,WAO/B,uBACA,cAAC3M,EAAA,EAAD,CACEW,QAAQ,WACRT,MAAM,kBACNxB,KAAK,SACLkB,MAAOV,EAAS0I,OAChBzH,SAAUV,EACVnB,UAAU,gBAEZ,cAAC0B,EAAA,EAAD,aACEW,QAAQ,WACRT,MAAM,sBACNxB,KAAK,SACLkB,MAAOV,EAASoI,OAChBnH,SAAUV,EACVnB,UAAU,eANZ,YAOY,gBAEZ,cAAC0B,EAAA,EAAD,CACEW,QAAQ,WACRT,MAAM,uBACNxB,KAAK,UACLkB,MAAOV,EAASkI,QAChBjH,SAAUV,EACVnB,UAAU,gBAEZ,uBACA,uBACA,eAAC,KAAD,CAAyB4Q,MAAOC,KAAhC,UACE,cAAC,KAAD,CACE7Q,UAAU,cACV8Q,gBAAc,EACdzO,QAAQ,SACR0O,aAAa,WACbC,OAAO,aACPC,OAAO,SACPtI,GAAG,qBACH/G,MAAM,gBACNN,MAAOiP,EAAQ3P,EAASuI,cACxBtH,SAAU4O,EACVS,oBAAqB,CACnB,aAAc,iBAGlB,cAAC,KAAD,CACElR,UAAU,cACViR,OAAO,SACPtI,GAAG,cACH/G,MAAM,gBACNmP,aAAa,WACbzP,MAAOiP,EAAQ3P,EAASuI,cACxBtH,SAAU4O,EACVS,oBAAqB,CACnB,aAAc,uBAKtB,cAACzL,EAAA,EAAD,CAAYpD,QAAQ,KAApB,6BACA,uBACA,sBAAKrC,UAAU,YAAf,UACE,cAACoH,EAAA,EAAD,CACEC,UAAQ,EACRC,QAAS3C,GACTvE,KAAK,YACLmH,WAAY3G,EAASuE,UACrBqC,cAAe,SAACpG,EAAGqG,GACjB5G,EAAY,2BAAKD,GAAN,IAAgBuE,UAAWsC,MAExCC,YAAa,SAACC,GAAD,OACX,cAACjG,EAAA,EAAD,2BAAeiG,GAAf,IAAuB/F,MAAM,QAAQS,QAAQ,iBAIjD,cAACD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QA/NrC,WACf,IAAK3B,EAASuE,UAAUW,OACtB,OAAOrC,IAAK,QAAS,uBAAwB,SAC/C,IAAImE,EAAYhH,EAASwI,eACzBxB,EAAUzB,KAAKvF,EAASuE,WACxBtE,EAAY,2BACPD,GADM,IAETwI,eAAgBxB,EAChBzC,UAAW,OAuNL,oBAIF,uBACCvE,EAASwI,eAAe3C,KAAI,SAACoB,GAC5B,OACE,qCACE,cAACC,EAAA,EAAD,CACE9H,UAAU,YAEV4B,MAAOiG,EACPE,SAAU,kBA/NA,SAACF,GACzB,IAAID,EAAYhH,EAASwI,eAAenC,QAAO,SAACe,GAAD,OAAQA,IAAOH,KAC9DhH,EAAY,2BACPD,GADM,IAETwI,eAAgBxB,KA2NYK,CAAkBJ,KAF7BA,GAIP,+BAIN,uBACA,uBACA,uBACA,uBAEA,cAACzF,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QA/KW,WACnB,OAC8B4O,MAA5BlL,OAAOrF,EAASoI,SACamI,MAA7BlL,OAAOrF,EAASkI,UACYqI,MAA5BlL,OAAOrF,EAAS0I,QAET7F,IAAK,QAAS,uBAAwB,SAG7CwC,OAAOrF,EAASoI,SAAW,GAC3B/C,OAAOrF,EAASkI,UAAY,GAC5BlI,EAAS0I,QAAU,EAEZ7F,IAAK,QAAS,gCAAiC,SACpDwC,OAAOrF,EAASoI,QAAU/C,OAAOrF,EAASkI,UAC5CX,QAAQC,IAAIxH,EAASoI,QACrBb,QAAQC,IAAIxH,EAASkI,SACdrF,IACL,QACA,mDACA,UAGA7C,EAASuI,aAAeuB,KAAK6B,MACxB9I,IAAK,QAAS,6BAA8B,cA3DjC,WACpB,IACI4E,EAAS,CACXzF,QAAS,CACP,eAAgB,mBAChB,eAAgBG,aAAauF,QAAQ,WAGrC9F,EAAI,2BACH5B,GADG,IAENoI,OAAQ/C,OAAOrF,EAASoI,QACxBF,QAAS7C,OAAOrF,EAASkI,SACzBQ,OAAQrD,OAAOrF,EAAS0I,QACxBG,UAAWxI,EAAKmC,OAGlBV,IACGC,KAhBO,eAgBGH,EAAM6F,GAChBxF,MAAK,SAACC,GAELW,IAAK,+BAAgC,GAAI,cAE1CH,OAAM,SAACC,GACFA,EAAMT,SACJS,EAAMT,SAASN,MACbe,EAAMT,SAASN,KAAKgB,KACtBC,IAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,SAI3CC,IAAK,QAAS,uBAAwB,YA8B5C2N,IAuJQ5R,MAAO,CAAEkF,YAAa,IAJxB,kBAQA,cAACtC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,QAAS,kBAAM1B,EAAYV,KAH7B,oBAOA,uBACA,iCCrSJuI,GAAiB,CACrBC,GAAI,SACJC,MAAO,YACPC,QAAS,YACTC,QAAS,GACTC,QAAS,EACTC,OAAQ,GACRC,YAAa,EACbC,YAAa,cACbC,aAAc,cACdC,eAAgB,CAAC,SAAU,eAAgB,cAC3CC,SAAU,EACVC,OAAQ,IACRC,WAAY,EACZC,UAAW,GACXC,UAAW,CACTd,GAAI,UACJvI,KAAM,iBACNC,MAAO,gCAILsO,GAAK,SAAC9E,GAEV,OADQ,IAAIa,KAAKb,GACRc,kBA8RI0G,OA3Rf,SAAyBzH,GAAQ,IAAD,EACAjJ,oBAAS,GADT,mBACvBoJ,EADuB,KACdC,EADc,OAEArJ,mBAC5BiJ,EAAME,QAAUF,EAAME,QAAUpB,IAHJ,mBAEvBoB,EAFuB,KAEdwH,EAFc,KAMxBf,EAAU,SAACC,GAEf,OADS,IAAI9F,KAAK8F,IAIdC,EAAmB,SAACC,GACxBY,EAAW,2BACNxH,GADK,IAERX,aAAcuH,MAIZvP,EAAkB,SAACC,GACvBkQ,EAAW,2BACNxH,GADK,kBAEP1I,EAAEC,OAAOjB,KAAOgB,EAAEC,OAAOC,UAIxBiQ,EAAgB,WACpB,IAAI9O,EAAG,uBAAmBqH,EAAQ5B,KAC9BG,EAAS,CACXzF,QAAS,CACP,eAAgB,mBAChB,eAAgBG,aAAauF,QAAQ,WAGzC5F,IACG8O,OAAO/O,EAAK4F,GACZxF,MAAK,SAACC,GACLW,IAAK,+BAAgC,GAAI,WAAWZ,MAAK,kBACvDoB,SAASwN,eAGZnO,OAAM,SAACC,GACFA,EAAMT,SACJS,EAAMT,SAASN,MACbe,EAAMT,SAASN,KAAKgB,KACtBC,IAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,UAI3C2E,QAAQC,IAAI7E,GACZE,IAAK,QAAS,uBAAwB,cAwCxCiO,EAAe,WACnB,OAA+BP,MAA3BlL,OAAO6D,EAAQd,SAA+CmI,MAA5BlL,OAAO6D,EAAQhB,SAC5CrF,IAAK,QAAS,uBAAwB,SAE3CwC,OAAO6D,EAAQd,SAAW,GAAK/C,OAAO6D,EAAQhB,UAAY,EACrDrF,IAAK,QAAS,gCAAiC,SACpDwC,OAAO6D,EAAQd,QAAU/C,OAAO6D,EAAQhB,SACnCrF,IACL,QACA,oDACA,SAGAqG,EAAQX,aAAeuB,KAAK6B,MACvB9I,IAAK,QAAS,6BAA8B,cAjDjC,WACpB,IAAIhB,EAAG,uBAAmBqH,EAAQ5B,KAC9BG,EAAS,CACXzF,QAAS,CACP,eAAgB,mBAChB,eAAgBG,aAAauF,QAAQ,WAGrC9F,EAAO,CACTsG,QAASgB,EAAQhB,QACjBE,OAAQc,EAAQd,OAChBG,aAAcW,EAAQX,cAExBzG,IACG6F,IAAI9F,EAAKD,EAAM6F,GACfxF,MAAK,SAACC,GACLW,IAAK,+BAAgC,GAAI,WACzCuG,GAAW,MAEZ1G,OAAM,SAACC,GACFA,EAAMT,SACJS,EAAMT,SAASN,OACbe,EAAMT,SAASN,KAAKgB,IACtBC,IAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,SAC9BD,EAAMT,SAASN,KAAKmP,QAC7BlO,IAAK,QAASF,EAAMT,SAASN,KAAKmP,OAAOC,KAAK,SAAU,WAI5DzJ,QAAQC,IAAI7E,GACZE,IAAK,QAAS,uBAAwB,aAoB5CoO,IA2HF,OACE,cAACzH,EAAA,EAAD,CAAM5K,MAAO,CAAEiJ,aAAc,IAA7B,SACE,eAAC4B,EAAA,EAAD,WACE,gCACE,cAAC5E,EAAA,EAAD,CAAYpD,QAAQ,KAAKC,MAAM,cAAc7C,QAAQ,SAArD,SACGqK,EAAQlB,QAEX,cAAC0B,GAAA,EAAD,CACEC,UAAQ,EACRjJ,MAAOwI,EAAQN,UAAYM,EAAQP,WACnC/J,MAAO,CAAEgL,MAAO,cAGpB,eAAC/E,EAAA,EAAD,CAAYjG,MAAO,CAAEiJ,cAAe,GAAKnG,MAAM,gBAA/C,uBACa,IACX,uBAAM9C,MAAO,CAAE8C,MAAO,UAAWmI,SAAU,UAA3C,UACGX,EAAQL,UAAUrJ,KAAM,UAG7B,eAACqF,EAAA,EAAD,CAAYjG,MAAO,CAAEiJ,cAAe,GAAKnG,MAAM,gBAA/C,8BACoBqM,GAAG7E,EAAQZ,aAAc,OAE7C,cAACzD,EAAA,EAAD,CAAYnD,MAAM,cAAc9C,MAAO,CAAEiJ,cAAe,GAAxD,SACGqB,EAAQjB,UAEX,eAACpD,EAAA,EAAD,CAAYnD,MAAM,gBAAgB9C,MAAO,CAAEiJ,cAAe,GAA1D,sBACY,IACY,IAArBqB,EAAQT,SAAiB,aAAzB,UAA2CS,EAAQT,SAAnD,cAEH,eAAC5D,EAAA,EAAD,CAAYnD,MAAM,gBAAgB9C,MAAO,CAAEiJ,cAAe,GAA1D,kCACwBqB,EAAQd,OAASc,EAAQb,eAEjD,eAACxD,EAAA,EAAD,CAAYnD,MAAM,gBAAgB9C,MAAO,CAAEiJ,aAAc,GAAzD,qCAC2BqB,EAAQf,WAEnC,qBAAKvJ,MAAO,CAAEiJ,aAAc,GAA5B,SACGqB,EAAQV,eAAe3C,KAAI,SAACoB,GAC3B,OACE,qCACE,cAACC,EAAA,EAAD,CAAkBlG,MAAOiG,GAAdA,GAAwB,YAK3C,eAACpC,EAAA,EAAD,CACEpD,QAAQ,KACR7C,MAAO,CAAE8C,MAAO,aAAcmG,aAAc,GAF9C,mBAIIqB,EAAQR,UAvKZS,EAEA,qCACE,cAACrI,EAAA,EAAD,aACEW,QAAQ,WACRT,MAAM,sBACNxB,KAAK,SACLkB,MAAOwI,EAAQd,OACfnH,SAAUV,EACVnB,UAAU,eANZ,YAOY,gBAEZ,cAAC0B,EAAA,EAAD,CACEW,QAAQ,WACRT,MAAM,uBACNxB,KAAK,UACLkB,MAAOwI,EAAQhB,QACfjH,SAAUV,EACVnB,UAAU,gBAEZ,uBACA,uBACA,eAAC,KAAD,CAAyB4Q,MAAOC,KAAhC,UACE,cAAC,KAAD,CACE7Q,UAAU,cACV8Q,gBAAc,EACdzO,QAAQ,SACR0O,aAAa,WACbC,OAAO,aACPC,OAAO,SACPtI,GAAG,qBACH/G,MAAM,gBACNN,MAAOiP,EAAQzG,EAAQX,cACvBtH,SAAU4O,EACVS,oBAAqB,CACnB,aAAc,iBAGlB,cAAC,KAAD,CACElR,UAAU,cACViR,OAAO,SACPtI,GAAG,cACH/G,MAAM,gBACNmP,aAAa,WACbzP,MAAOiP,EAAQzG,EAAQX,cACvBtH,SAAU4O,EACVS,oBAAqB,CACnB,aAAc,oBAIpB,uBACA,cAAC9O,EAAA,EAAD,CACE5C,MAAO,CACLgL,MAAO,QACP/B,aAAc,GACd/D,YAAa,GACbD,gBAAiB,aACjBnC,MAAO,SAETC,QAASmP,EARX,uBAgBF,qCACE,eAACjM,EAAA,EAAD,CAAYjG,MAAO,CAAEiJ,cAAe,GAAKnG,MAAM,gBAA/C,uBACaqM,GAAG7E,EAAQX,cAAe,OAEvC,eAAC1D,EAAA,EAAD,CAAYnD,MAAM,gBAAgB9C,MAAO,CAAEiJ,cAAe,GAA1D,mCACyBqB,EAAQhB,WAEjC,eAACrD,EAAA,EAAD,CAAYnD,MAAM,gBAAgB9C,MAAO,CAAEiJ,aAAc,GAAzD,kCACwBqB,EAAQd,UAEhC,cAAC3E,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAE,uBAAkBsF,EAAQ5B,KAAzD,SACE,cAAC9F,EAAA,EAAD,CACE5C,MAAO,CACLgL,MAAO,OACP/B,aAAc,GACdqJ,WAAY,GAEdxP,MAAM,UANR,+BAWF,cAACF,EAAA,EAAD,CACE5C,MAAO,CACLgL,MAAO,QACP/B,aAAc,GACd/D,YAAa,IAEfrC,QAAQ,YACRC,MAAM,YACNC,QAASgP,EARX,oBAYA,cAACnP,EAAA,EAAD,CACE5C,MAAO,CACLgL,MAAO,QACP/B,aAAc,GACd/D,YAAa,IAEfrC,QAAQ,YACRC,MAAM,UACNC,QAAS,kBAAMyH,GAAW,IAR5B,2B,OCxNK+H,OAjCf,WAAuB,IAAD,EACYpR,mBAAS,IADrB,mBACbiL,EADa,KACHC,EADG,OAEM/K,IAAMC,WAAWC,IAAnCC,EAFY,EAEZA,KAcR,OAhBoB,EAENC,QACd+K,qBAAU,WACR,IAAIxJ,EAAG,mCAA+BxB,EAAKmC,KAAK8E,KAChDxF,IACG0J,IAAI3J,GACJI,MAAK,SAACC,GACL+I,EACE/I,EAASN,KAAKoJ,SAAS3E,QAAO,SAAC6C,GAC7B,OAAQA,EAAQ0C,SAAW1C,EAAQb,YAAca,EAAQd,cAI9D1F,OAAM,SAACC,GAAD,OAAW4E,QAAQC,IAAI7E,QAC/B,IAED,qCACE,cAAC,EAAD,IACA,qBAAKvD,UAAU,aAAf,SACE,sBAAKA,UAAU,WAAf,UACE,cAACyF,EAAA,EAAD,CAAYpD,QAAQ,KAAKoL,cAAY,EAArC,yBAGC7B,EAASnF,KAAI,SAACqD,GAAD,OACZ,cAAC,GAAD,CAAmCA,QAASA,GAAtBA,EAAQ5B,iB,SCTpCwG,I,OAAO,SAACC,GACZ,OAAKA,EACG,IAAIjE,KAAKiE,GACRC,eAFO,OAKZC,GAAW,SAACC,GAChB,OAAQA,GACN,IAAK,UACH,MAAO,QACT,IAAK,cACH,MAAO,OACT,IAAK,WACH,MAAO,MACT,IAAK,WACH,MAAO,UAiCPkD,IAZatH,KAAK6B,MAYJ,CAClBhB,UAAW,OACXC,UAAW,cAmQEyG,OAhQf,WAAyB,IAAD,EACEtR,mBAASqR,IADX,mBACf7E,EADe,KACT+E,EADS,OAEEvR,mBAAS,IAFX,mBAEfiF,EAFe,KAEToJ,EAFS,KAGdlE,EAAcqH,eAAdrH,UAEFsH,EAAe,uCAAG,gCAAAjG,EAAA,+EAEKzJ,IAAM0J,IAAN,qCACOtB,IAHZ,cAKpBgC,GAHIA,EAFgB,QAKQtK,KAAKsK,aACjC3E,QAAQC,IAAI0E,GANQ,SAQGpK,IAAM0J,IAAN,mCAAsCtB,IARzC,OASpBuH,GADIA,EARgB,QASI7P,KAAK8P,MAC7BnK,QAAQC,IAAIiK,IAERzM,EAAOkH,EAAarG,KAAI,SAACsG,GAC3B,IAAIwF,EAAYF,EAAW7C,MACzB,SAACrD,GAAD,OAAOA,EAAEjE,MAAQ6E,EAAYhC,eAe/B,MAbU,CACRpC,GAAIoE,EAAY7E,IAChB9H,KAAMmS,EAAUnS,KAChB0E,UAAWyN,EAAUzN,UACrBC,OAAQwN,EAAUxN,OAClBkF,IAAK8C,EAAY9C,IACjBuI,gBAAiBzF,EAAY0F,QAC7BpD,OAC2B,IAAzBkD,EAAUhJ,WACN,EACAgJ,EAAU/I,UAAY+I,EAAUhJ,WACtCuF,OAAQ/B,EAAY+B,YAInB3B,MAAK,SAAChB,EAAGiB,GAAJ,OACRjB,EAAEgB,EAAK5B,WAAa6B,EAAED,EAAK5B,WACJ,cAAnB4B,EAAK3B,WACF,EACD,EACiB,cAAnB2B,EAAK3B,UACL,GACC,KAEPwD,EAAQpJ,GAxCY,kDA0CpBuC,QAAQC,IAAR,MA1CoB,0DAAH,qDA8CrB6D,oBAAUmG,EAAiB,IAE3B,IAAMM,EAAoB,SAACC,EAAeC,GACxC,IAAInQ,EAAG,2BAAuBkQ,GAC1BnQ,EAAO,CAAEsM,OAAQ8D,GACjBvK,EAAS,CACXzF,QAAS,CACP,eAAgB,mBAChB,eAAgBG,aAAauF,QAAQ,WAGzC5F,IACG6F,IAAI9F,EAAKD,EAAM6F,GACfxF,MAAK,WACJY,KAAK,aAAD,OAAcmP,GAAa,GAAI,WAAW/P,MAAK,kBACjDoB,SAASwN,eAGZnO,OAAM,SAACC,GACFA,EAAMT,SACJS,EAAMT,SAASN,MACbe,EAAMT,SAASN,KAAKgB,KACtBC,KAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,SAI3CC,KAAK,QAAS,uBAAwB,aAKxCoP,EAAgB,SAAC7Q,GACrB,MAAmB,YAAfA,EAAI8M,OAEJ,qCACE,cAAC1M,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAAS,kBAAMmQ,EAAkB1Q,EAAI2G,GAAI,gBAH3C,uBAOA,cAACvG,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,QAAS,kBAAMmQ,EAAkB1Q,EAAI2G,GAAI,aAH3C,uBASoB,gBAAf3G,EAAI8M,OAEX,qCACE,cAAC1M,EAAA,EAAD,CACEC,QAAQ,YACR7C,MAAO,CAAE8C,MAAO,QAASmC,gBAAiB,cAC1ClC,QAAS,kBAAMmQ,EAAkB1Q,EAAI2G,GAAI,aAH3C,oBAOA,cAACvG,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,QAAS,kBAAMmQ,EAAkB1Q,EAAI2G,GAAI,aAH3C,uBAUC,MAGHmK,EAAe,SAAC1R,GACpB8Q,EAAQ,2BACH/E,GADE,kBAEJ/L,EAAEC,OAAOjB,KAAOgB,EAAEC,OAAOC,UAI9B,OACE,qCACE,cAAC,EAAD,IACA,sBAAKtB,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,yCACA,eAACkO,EAAA,EAAD,CACE9N,KAAK,YACLkB,MAAO6L,EAAK5B,UACZ1J,SAAUiR,EAHZ,UAKE,cAACxE,EAAA,EAAD,CAAUhN,MAAM,OAAhB,kBACA,cAACgN,EAAA,EAAD,CAAUhN,MAAM,kBAAhB,8BACA,cAACgN,EAAA,EAAD,CAAUhN,MAAM,SAAhB,uBAEF,eAACS,EAAA,EAAD,CACEC,KAAG,EACHV,MAAO6L,EAAK3B,UACZpL,KAAK,YACLyB,SAAUiR,EAJZ,UAME,cAAC7Q,EAAA,EAAD,CACEX,MAAM,YACNY,QAAS,cAACC,EAAA,EAAD,IACTP,MAAM,cAER,cAACK,EAAA,EAAD,CACEX,MAAM,aACNY,QAAS,cAACC,EAAA,EAAD,IACTP,MAAM,kBAGV,uBACA,uBACA,qBAAK5B,UAAU,gBAAf,SACE,cAACoC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN9C,MAAO,CAAEkF,YAAa,IACtBnC,QAAS6P,EAJX,wBAUJ,cAAC7D,EAAA,EAAD,CACEC,YAAY,WACZC,UAAQ,EACRjP,MAAO,CAAEE,SAAU,QAASC,OAAQ,UAEtC,sBAAKK,UAAU,iBAAf,UACE,cAACyF,EAAA,EAAD,CAAYpD,QAAQ,KAAKoL,cAAY,EAArC,0BAGA,uBACA,uBACA,cAACkC,GAAA,EAAD,CAAgBrL,UAAWsL,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO7P,UAAU,mBAAjB,UACE,cAAC8P,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,QAAjB,4BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,uBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,8BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,iBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,yBAGJ,cAACC,GAAA,EAAD,UACGtK,EAAKa,KAAI,SAACzE,GAAD,OACR,eAAC+N,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW1L,UAAU,KAAK6L,MAAM,MAAhC,SACGnO,EAAI5B,OAEP,cAAC4P,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,cAAC1J,EAAA,EAAD,CAAMC,OAAK,EAAX,SACGxE,EAAI+C,OAAO0B,KAAI,SAACoB,GAAD,OACd,cAAClB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,QAASgB,KADzB,UAAkBA,GAAlB,OAA0B7F,EAAI5B,cAMpC,cAAC4P,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,cAAC1J,EAAA,EAAD,CAAMC,OAAK,EAAX,SACGxE,EAAI8C,UAAU2B,KAAI,SAACC,GAAD,OACjB,cAACC,EAAA,EAAD,UAGE,cAACC,EAAA,EAAD,CACEC,QAASH,EAAIN,cACbU,UAAS,UAAKJ,EAAIL,UAAT,YAAsBK,EAAIJ,YALvC,UACUI,EAAIN,eADd,OAC8BM,EAAIL,UADlC,YAC+CK,EAAIJ,iBAUzD,cAAC0J,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACGvB,GAAK1M,EAAIwQ,mBAEZ,cAACxC,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BjO,EAAIiI,MAC9B,cAAC+F,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,cAAC3F,GAAA,EAAD,CAAQC,UAAQ,EAACjJ,MAAOU,EAAIqN,WAE9B,cAACW,GAAA,EAAD,CACEC,MAAM,QACNzQ,MAAO,CAAE8C,MAAOuM,GAAS7M,EAAI8M,SAF/B,SAIG9M,EAAI8M,SAEP,cAACkB,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B4C,EAAc7Q,OAxC3BA,EAAI5B,0BCnQ/BsO,I,OAAO,SAACC,GACZ,OAAKA,EACG,IAAIjE,KAAKiE,GACRC,eAFO,OA0DZoD,IAPStH,KAAK6B,MAOA,CAClBhB,UAAW,OACXC,UAAW,cAkNEuH,OA/Mf,WAA8B,IAAD,EACHpS,mBAASqR,IADN,mBACpB7E,EADoB,KACd+E,EADc,OAEHvR,mBAAS,IAFN,mBAEpBiF,EAFoB,KAEdoJ,EAFc,OAGDlO,IAAMC,WAAWC,IAAnCC,EAHmB,EAGnBA,KAEF+R,GALqB,EAGb9R,QAEI,uCAAG,8BAAAiL,EAAA,+EAGMzJ,IAAM0J,IAAN,qCACSnL,EAAKmC,KAAK8E,MAJzB,cAMjBmK,GAHIA,EAHa,QAMO7P,KAAK6P,WANZ,SAQG3P,IAAM0J,IAAN,4CACmBnL,EAAKmC,KAAK8E,MAThC,OAWjBqH,GAHIA,EARa,QAWC/M,KAAK+M,SAEvB8C,EAAaA,EAAW5L,KAAI,SAAC8L,GAC3B,IAAIU,EAAW1D,EAAQC,MAAK,SAACJ,GAAD,OAAOA,EAAErE,cAAgBwH,EAAU5J,MAG/D,OAFc4J,EAAUU,SAApBA,EAA+BA,EAAS3R,MAClB,EACnBiR,MAGEpF,MAAK,SAAChB,EAAGiB,GAAJ,OACdjB,EAAEgB,EAAK5B,WAAa6B,EAAED,EAAK5B,WACJ,cAAnB4B,EAAK3B,WACF,EACD,EACiB,cAAnB2B,EAAK3B,UACL,GACC,KAEPrD,QAAQC,IAAIiK,GACZrD,EAAQqD,GA9BS,kDAgCjBlK,QAAQC,IAAR,MAhCiB,0DAAH,sDAoCZ8K,EAAsB,SAAClR,EAAKkN,GAChC,IAAIC,EAAUvJ,EAAKa,KAAI,SAAC2I,GAEtB,OADIA,EAAEzG,KAAO3G,EAAI2G,KAAIyG,EAAE6D,SAAW/D,GAC3BE,KAETJ,EAAQG,IAwCVlD,oBAAU+G,EAAc,IAGxB,IAAMF,EAAe,SAAC1R,GACpB8Q,EAAQ,2BACH/E,GADE,kBAEJ/L,EAAEC,OAAOjB,KAAOgB,EAAEC,OAAOC,UAI9B,OACE,qCACE,cAAC,EAAD,IACA,sBAAKtB,UAAU,oBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,yCACA,eAACkO,EAAA,EAAD,CACE9N,KAAK,YACLkB,MAAO6L,EAAK5B,UACZ1J,SAAUiR,EAHZ,UAKE,cAACxE,EAAA,EAAD,CAAUhN,MAAM,OAAhB,kBACA,cAACgN,EAAA,EAAD,CAAUhN,MAAM,QAAhB,uBACA,cAACgN,EAAA,EAAD,CAAUhN,MAAM,cAAhB,0BACA,cAACgN,EAAA,EAAD,CAAUhN,MAAM,SAAhB,uBAEF,eAACS,EAAA,EAAD,CACEC,KAAG,EACHV,MAAO6L,EAAK3B,UACZpL,KAAK,YACLyB,SAAUiR,EAJZ,UAME,cAAC7Q,EAAA,EAAD,CACEX,MAAM,YACNY,QAAS,cAACC,EAAA,EAAD,IACTP,MAAM,cAER,cAACK,EAAA,EAAD,CACEX,MAAM,aACNY,QAAS,cAACC,EAAA,EAAD,IACTP,MAAM,kBAGV,uBACA,uBACA,sBAAK5B,UAAU,gBAAf,UACE,cAACoC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACN9C,MAAO,CAAEkF,YAAa,IACtBnC,QAASyQ,EAJX,mBAQA,cAAC5Q,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,QAAS,WACP2P,EAAQF,KAJZ,yBAYJ,cAACzD,EAAA,EAAD,CACEC,YAAY,WACZC,UAAQ,EACRjP,MAAO,CAAEE,SAAU,QAASC,OAAQ,UAEtC,sBAAKK,UAAU,YAAf,UACE,cAACyF,EAAA,EAAD,CAAYpD,QAAQ,KAAKoL,cAAY,EAArC,gCAGA,uBACA,uBACA,cAACkC,GAAA,EAAD,CAAgBrL,UAAWsL,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO7P,UAAU,mBAAjB,UACE,cAAC8P,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,QAAjB,4BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,0BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,sBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,uBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,uBAGJ,cAACC,GAAA,EAAD,UACGtK,EAAKa,KAAI,SAACzE,GAAD,OACR,eAAC+N,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW1L,UAAU,KAAK6L,MAAM,MAAhC,SACGnO,EAAI5B,OAEP,cAAC4P,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BvB,GAAK1M,EAAImR,eACnC,cAACnD,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BjO,EAAI6G,UAC9B,cAACmH,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BjO,EAAI4G,QAC9B,cAACoH,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,cAAC3F,GAAA,EAAD,CAAQC,UAAQ,EAACjJ,MAAOU,EAAIqN,OAAQ+D,UAAW,QAEjD,cAACpD,GAAA,EAAD,UACE,cAAC1F,GAAA,EAAD,CACElK,KAAM4B,EAAI2G,GACVrH,MAAOU,EAAIiR,SACXpR,SAAU,SAACT,EAAG8N,GAAJ,OA9IT,SAAClN,EAAKkN,GAC3B,IAAIkB,EAAYpO,EAAIiR,SACpBC,EAAoBlR,EAAKkN,GACzB,IACI1M,EAAO,CACTlB,MAAO4N,EACPnE,YAAa/I,EAAI2G,GACjB0K,YAAapS,EAAKmC,KAAK8E,KAErBG,EAAS,CACXzF,QAAS,CACP,eAAgB,mBAChB,eAAgBG,aAAauF,QAAQ,WAGzC5F,IACGC,KAbO,wBAaGH,EAAM6F,GAChBxF,MAAK,SAACC,GACLW,IAAK,iBAAkB,GAAI,WAAWZ,MAAK,kBAAMmQ,UAElD1P,OAAM,SAACC,GACFA,EAAMT,SACJS,EAAMT,SAASN,MACbe,EAAMT,SAASN,KAAKgB,KACtBC,IAAK,QAASF,EAAMT,SAASN,KAAKgB,IAAK,SAASX,MAAK,kBACnDqQ,EAAoBlR,EAAKoO,MAK/B3M,IAAK,QAAS,uBAAwB,SAASZ,MAAK,kBAClDqQ,EAAoBlR,EAAKoO,SAgHXkD,CAAetR,EAAKkN,UAfblN,EAAI2G,wBCrP/B4K,GAAc,CAClBlQ,UAAU,EACVJ,MAAO,GACPG,KAAM,GACN5C,SAAU,IAGCQ,GAAcF,IAAM0S,cAAc,MAyGhCC,OAvGf,WAAgB,IAAD,EACW9S,mBAAS4S,IADpB,mBACNtS,EADM,KACAC,EADA,OAEiBP,oBAAS,GAF1B,mBAEN+S,EAFM,KAEGC,EAFH,KAmDb,OA/CA1H,qBAAU,WACR,GACElJ,aAAauF,QAAQ,UACrBvF,aAAauF,QAAQ,aACrBvF,aAAauF,QAAQ,QACrB,CACA,IAAI9H,EAAWuC,aAAauF,QAAQ,YAChClF,EAAOF,KAAK0Q,MAAM7Q,aAAauF,QAAQ,SACvCrF,EAAQF,aAAauF,QAAQ,SACjC,GAAiB,cAAb9H,GAAyC,cAAbA,EAA0B,CACxD,IAAIiC,EAAG,oBAAgBjC,EAAhB,YAA4B4C,EAAK8E,KACpCG,EAAS,CACXzF,QAAS,CACP,eAAgB,mBAChB,eAAgBK,IAIpBP,IACG0J,IAAI3J,EAAK4F,GACTxF,MAAK,SAACC,GACL5B,EAAQ,CACNmC,UAAU,EACVD,KAAMA,EACNH,MAAOA,EACPzC,SAAUA,OAGb8C,OAAM,SAACC,GACNR,aAAagB,WAAW,QACxBhB,aAAagB,WAAW,YACxBhB,aAAagB,WAAW,SACxB7C,EAAQqS,YAGZxQ,aAAagB,WAAW,QACxBhB,aAAagB,WAAW,YACxBhB,aAAagB,WAAW,SACxB7C,EAAQqS,OAGX,IAEHtH,qBAAU,WACR4H,YAAW,kBAAMF,GAAW,KAAQ,OACnC,CAAC1S,IAEAyS,EAAgB,cAAC,EAAD,IAGhB,cAAC1S,GAAY8S,SAAb,CAAsBxS,MAAO,CAAEL,OAAMC,WAArC,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAO6S,KAAK,qBAAZ,SACG,WACC,OAAI9S,EAAKoC,UAA8B,cAAlBpC,EAAKT,SACjB,cAAC,GAAD,IACG,cAAC,KAAD,CAAUgE,GAAG,SAG7B,cAAC,KAAD,CAAOuP,KAAK,2BAAZ,SACG,WACC,OAAI9S,EAAKoC,UAA8B,cAAlBpC,EAAKT,SACjB,cAAC,GAAD,IACG,cAAC,KAAD,CAAUgE,GAAG,SAG7B,cAAC,KAAD,CAAOuP,KAAK,kBAAZ,SACG,WACC,OAAI9S,EAAKoC,UAA8B,cAAlBpC,EAAKT,SACjB,cAAC,GAAD,IACG,cAAC,KAAD,CAAUgE,GAAG,SAG7B,cAAC,KAAD,CAAOuP,KAAK,cAAZ,SACG,WACC,OAAI9S,EAAKoC,UAA8B,cAAlBpC,EAAKT,SACjB,cAAC,GAAD,IACG,cAAC,KAAD,CAAUgE,GAAG,SAG7B,cAAC,KAAD,CAAOuP,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,IAAZ,SACG,WACC,OAAI9S,EAAKoC,SACe,cAAlBpC,EAAKT,SACA,cAAC,GAAD,IAEA,cAAC,GAAD,IAEG,cAAC,EAAD,aC/GbwT,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrR,MAAK,YAAkD,IAA/CsR,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.2838a709.chunk.js","sourcesContent":["import CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst style = {\n  display: \"flex\",\n  position: \"fixed\",\n  height: \"100%\",\n  width: \"100%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nfunction LoadingScreen() {\n  return (\n    <div className=\"LoadingScreen\" style={style}>\n      <CircularProgress size={80} />\n    </div>\n  );\n}\n\nexport default LoadingScreen;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { AuthContext } from \"../../App\";\n\nconst defaultFormData = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  contactNo: \"\",\n  userType: \"recruiter\",\n  formType: \"Login\",\n};\n\nfunction LoginForm() {\n  const [formData, setFormData] = useState(defaultFormData);\n  const { auth, setAuth } = React.useContext(AuthContext);\n\n  const login = () => {\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let data = {\n      email: formData.email,\n      password: formData.password,\n    };\n    let url = `/api/auth/${formData.userType}`;\n    axios\n      .post(url, data, config)\n      .then((response) => {\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"userType\", response.data.userType);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n        setAuth({\n          loggedIn: true,\n          user: response.data.user,\n          token: response.data.token,\n          userType: response.data.userType,\n        });\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.msg) {\n              swal(\"Error\", error.response.data.msg, \"error\");\n            }\n          }\n        } else {\n          swal(\"Error\", \"Something went wrong\", \"error\");\n        }\n      });\n  };\n\n  const signUp = () => {\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let data = {\n      email: formData.email,\n      password: formData.password,\n      name: formData.name,\n      contactNo: formData.contactNo,\n    };\n    let url = `/api/${formData.userType}`;\n    axios\n      .post(url, data, config)\n      .then((response) => {\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"userType\", response.data.userType);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n        setAuth({\n          loggedIn: true,\n          user: response.data.user,\n          token: response.data.token,\n          userType: response.data.userType,\n        });\n      })\n      .catch((error) => {\n        if (error.response.data.msg) {\n          swal(\"Error\", error.response.data.msg, \"error\");\n        } else {\n          swal(\"Error\", \"Something went wrong\", \"error\");\n        }\n      });\n  };\n\n  const changeTypeHandle = (e) => {\n    e.preventDefault();\n    setFormData({\n      ...defaultFormData,\n      formType: formData.formType == \"Login\" ? \"Sign up\" : \"Login\",\n    });\n  };\n\n  const onChangeHandler = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <div className=\"LoginForm\">\n      <h1>{formData.formType}</h1>\n      <h1>{auth.userType.toString()}</h1>\n      <br />\n      <br />\n      <form noValidate autoComplete=\"off\">\n        {formData.formType == \"Sign up\" && (\n          <>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={onChangeHandler}\n            />\n            <br />\n            <br />\n          </>\n        )}\n        <TextField\n          fullWidth\n          label=\"Email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={onChangeHandler}\n        />\n        <br />\n        <br />\n        {formData.formType == \"Sign up\" && formData.userType == \"recruiter\" && (\n          <>\n            <TextField\n              fullWidth\n              label=\"Contact No\"\n              name=\"contactNo\"\n              value={formData.contactNo}\n              onChange={onChangeHandler}\n            />\n            <br />\n            <br />\n          </>\n        )}\n        <TextField\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={onChangeHandler}\n        />\n        <br />\n        <br />\n        <RadioGroup\n          row\n          value={formData.userType}\n          name=\"userType\"\n          onChange={onChangeHandler}\n        >\n          <FormControlLabel\n            value=\"recruiter\"\n            control={<Radio />}\n            label=\"Recruiter\"\n          />\n          <FormControlLabel\n            value=\"applicant\"\n            control={<Radio />}\n            label=\"Applicant\"\n          />\n        </RadioGroup>\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={formData.formType == \"Login\" ? login : signUp}\n        >\n          {formData.formType}\n        </Button>\n        <br />\n        <br />\n        <a href=\"#\" onClick={changeTypeHandle}>\n          {formData.formType == \"Login\" ? \"Sign up\" : \"Login\"} instead\n        </a>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport LoginForm from \"../LoginForm/LoginForm\";\nimport \"./Home.css\";\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      \n      \n        <LoginForm />\n      \n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { AuthContext } from \"../../App\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  const { auth, setAuth } = React.useContext(AuthContext);\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"userType\");\n    localStorage.removeItem(\"token\");\n    setAuth({\n      loggedIn: false,\n      token: {},\n      user: {},\n      userType: \"\",\n    });\n    window.location = \"/\";\n  };\n\n  const button = () => <Button>asdf</Button>;\n  if (auth.loggedIn && auth.userType === \"Recruiter\") {\n    return (\n      <AppBar position=\"static\">\n        <Toolbar className=\"Navbar\">\n          <h1 style={{ flexGrow: 1 }}>Jobs for the Boss</h1>\n          <Link component={RouterLink} to=\"/\">\n            <Button\n              variant=\"contained\"\n              style={{\n                color: \"white\",\n                backgroundColor: \"rgb(143, 1, 143)\",\n                marginRight: 10,\n              }}\n            >\n              Create Listing\n            </Button>\n          </Link>\n          <Link component={RouterLink} to=\"/mylistings\">\n            <Button\n              variant=\"contained\"\n              style={{\n                color: \"white\",\n                backgroundColor: \"rgb(143, 1, 143)\",\n                marginRight: 10,\n              }}\n            >\n              My Listings\n            </Button>\n          </Link>\n          <Link component={RouterLink} to=\"/acceptedemployees\">\n            <Button\n              variant=\"contained\"\n              style={{\n                color: \"white\",\n                backgroundColor: \"rgb(143, 1, 143)\",\n                marginRight: 10,\n              }}\n            >\n              Accepted Employees\n            </Button>\n          </Link>\n          <Link component={RouterLink} to=\"/profile\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                marginRight: 10,\n              }}\n            >\n              Profile\n            </Button>\n          </Link>\n          <Button color=\"secondary\" variant=\"contained\" onClick={logout}>\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    );\n  } else if (auth.loggedIn && auth.userType === \"Applicant\") {\n    return (\n      <AppBar position=\"static\">\n        <Toolbar className=\"Navbar\">\n          <h1 style={{ flexGrow: 1 }}>Jobs for the Boss</h1>\n          <Link component={RouterLink} to=\"/\">\n            <Button\n              variant=\"contained\"\n              style={{\n                color: \"white\",\n                backgroundColor: \"rgb(143, 1, 143)\",\n                marginRight: 10,\n              }}\n            >\n              Find Jobs\n            </Button>\n          </Link>\n          <Link component={RouterLink} to=\"/myapplications\">\n            <Button\n              variant=\"contained\"\n              style={{\n                color: \"white\",\n                backgroundColor: \"rgb(143, 1, 143)\",\n                marginRight: 10,\n              }}\n            >\n              My Applications\n            </Button>\n          </Link>\n          <Link component={RouterLink} to=\"/profile\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                marginRight: 10,\n              }}\n            >\n              Profile\n            </Button>\n          </Link>\n          <Button color=\"secondary\" variant=\"contained\" onClick={logout}>\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    );\n  } else return null;\n}\n\nexport default Navbar;\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Chip from \"@material-ui/core/Chip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Navbar from \"../Navbar/Navbar\";\nimport \"./Profile.css\";\nimport { AuthContext } from \"../../App\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\n\n/*\nconst defaultFormData = {\n  name: \"\",\n  email: \"\",\n  contactNo: \"\",\n  bio: \"\",\n  education: [\n    {\n      instituteName: \"SXBA\",\n      startYear: \"2014\",\n      endYear: \"2018\",\n    },\n    {\n      instituteName: \"Pace\",\n      startYear: \"2019\",\n      endYear: \"2020\",\n    },\n  ],\n  skills: [\"Python\", \"C\", \"C++\", \"Java\"],\n  userType: \"applicant\",\n  currInstituteName: \"\",\n  currStartYear: \"\",\n  currEndYear: \"\",\n  currSkill: \"\",\n  userType: \"applicant\",\n};\n*/\n\nconst languageList = [\n  \"Python\",\n  \"C\",\n  \"Javascript\",\n  \"C++\",\n  \"HTML\",\n  \"CSS\",\n  \"Java\",\n  \"Rust\",\n  \"Kotlin\",\n  \"PHP\",\n];\n\nfunction Profile() {\n  const { auth, setAuth } = React.useContext(AuthContext);\n\n  const [formData, setFormData] = useState({\n    name: auth.user.name,\n    email: auth.user.email,\n    contactNo: auth.user.contactNo,\n    bio: auth.user.bio,\n    education: auth.user.education,\n    skills: auth.user.skills,\n    userType: auth.userType,\n    currInstituteName: \"\",\n    currStartYear: \"\",\n    currEndYear: \"\",\n    currSkill: \"\",\n  });\n\n  const onChangeHandler = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const bioNumWords = () => {\n    let words = formData.bio.split(/\\s+/);\n    words.pop();\n    return words.length;\n  };\n\n  const addSkill = () => {\n    if (!formData.currSkill.trim())\n      return swal(\"Error\", \"skill can't be empty\", \"error\");\n    let newSkills = formData.skills;\n    newSkills.push(formData.currSkill);\n    setFormData({\n      ...formData,\n      skills: newSkills,\n      currSkill: \"\",\n    });\n  };\n\n  const handleSkillDelete = (skill) => {\n    let newSkills = formData.skills.filter((sk) => sk !== skill);\n    setFormData({\n      ...formData,\n      skills: newSkills,\n    });\n  };\n\n  const addEducation = () => {\n    if (!formData.currInstituteName.trim())\n      return swal(\"Error\", \"Institute can't be empty\", \"error\");\n\n    let re = /^(19|20)\\d{2}$/;\n\n    // start year\n    if (!re.test(formData.currStartYear)) {\n      return swal(\"Error\", \"Invalid start year\", \"error\");\n    }\n    if (Number(formData.currStartYear) > 2021) {\n      return swal(\"Error\", \"Invalid start year\", \"error\");\n    }\n    // end year\n    if (formData.currEndYear.trim() !== \"\") {\n      if (!re.test(formData.currEndYear)) {\n        return swal(\"Error\", \"Invalid end year\", \"error\");\n      }\n      if (Number(formData.currEndYear) < Number(formData.currStartYear))\n        return swal(\"Error\", \"Invalid start and end years\", \"error\");\n    }\n    let newEducation = formData.education;\n    newEducation.push({\n      instituteName: formData.currInstituteName,\n      startYear: formData.currStartYear,\n      endYear: formData.currEndYear,\n    });\n    setFormData({\n      ...formData,\n      education: newEducation,\n      currInstituteName: \"\",\n      currEndYear: \"\",\n      currStartYear: \"\",\n    });\n  };\n\n  const handleEducationDelete = (edu) => {\n    let newEducation = formData.education.filter((ed) => ed !== edu);\n    setFormData({\n      ...formData,\n      education: newEducation,\n    });\n  };\n\n  const updateUser = () => {\n    let url = `/api/${auth.userType}/${auth.user._id.toString()}`;\n    console.log(url);\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    let data = formData;\n    axios\n      .put(url, data, config)\n      .then((response) => {\n        swal(\"Updated user\", \"\", \"success\");\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n        setAuth({ ...auth, user: response.data.user });\n      })\n      .catch((error) => {\n        if (error.response.data.msg) {\n          swal(\"Error\", error.response.data.msg, \"error\");\n        } else {\n          swal(\"Error\", \"Something went wrong\", \"error\");\n        }\n      });\n  };\n\n  const validateForm = () => {\n    // email\n    let emailRe = /\\S+@\\S+\\.\\S+/;\n    if (!emailRe.test(formData.email))\n      return swal(\"Error\", \"Invalid email\", \"error\");\n\n    if (formData.userType === \"Recruiter\") {\n      let phoneRe = /^\\d{10}$/;\n      if (!phoneRe.test(formData.contactNo))\n        return swal(\"Error\", \"Invalid contact no\", \"error\");\n      if (bioNumWords() > 250)\n        return swal(\"Error\", \"Bio must be less than 250 words\", \"error\");\n    }\n\n    updateUser();\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"Profile\">\n        <div className=\"Profile-side\"></div>\n        <div className=\"Profile-header\">\n          <Typography variant=\"h1\">Profile</Typography>\n        </div>\n        <div className=\"Profile-main\">\n          <Typography variant=\"h4\">Basic details</Typography>\n          <br />\n          <form autoComplete=\"off\">\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"Name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={onChangeHandler}\n            />\n            <br />\n            <br />\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"Email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={onChangeHandler}\n            />\n            <br />\n            <br />\n            {formData.userType == \"Recruiter\" && (\n              <>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Contact No\"\n                  name=\"contactNo\"\n                  value={formData.contactNo}\n                  onChange={onChangeHandler}\n                />\n                <br />\n                <br />\n              </>\n            )}\n            {formData.userType == \"Recruiter\" && (\n              <>\n                <FormControl fullWidth>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    multiline\n                    rows=\"8\"\n                    label=\"Bio\"\n                    name=\"bio\"\n                    value={formData.bio}\n                    onChange={onChangeHandler}\n                  />\n                  <FormHelperText>{bioNumWords()}/250</FormHelperText>\n                </FormControl>\n                <br />\n                <br />\n              </>\n            )}\n          </form>\n          <br />\n          <br />\n          {formData.userType == \"Applicant\" && (\n            <>\n              <Typography variant=\"h4\">Education</Typography>\n              <br />\n              <div className=\"EducationForm\">\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Institute name\"\n                  name=\"currInstituteName\"\n                  value={formData.currInstituteName}\n                  onChange={onChangeHandler}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Start Year\"\n                  name=\"currStartYear\"\n                  value={formData.currStartYear}\n                  onChange={onChangeHandler}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  label=\"End Year\"\n                  name=\"currEndYear\"\n                  value={formData.currEndYear}\n                  onChange={onChangeHandler}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={addEducation}\n                >\n                  Add\n                </Button>\n              </div>\n              <List className=\"EducationList\" dense>\n                {formData.education.map((edu) => {\n                  return (\n                    <ListItem\n                      key={`${edu.instituteName}${edu.startYear}-${edu.endYear}`}\n                    >\n                      <ListItemText\n                        primary={edu.instituteName}\n                        secondary={`${edu.startYear}-${edu.endYear}`}\n                      />\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => handleEducationDelete(edu)}\n                      >\n                        X\n                      </IconButton>\n                    </ListItem>\n                  );\n                })}\n              </List>\n              <br />\n              <br />\n\n              <Typography variant=\"h4\">Skills</Typography>\n              <br />\n              <div className=\"SkillForm\">\n                <Autocomplete\n                  freeSolo\n                  options={languageList}\n                  name=\"currSkill\"\n                  inputValue={formData.currSkill}\n                  onInputChange={(e, newValue) => {\n                    setFormData({ ...formData, currSkill: newValue });\n                  }}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Skill\" variant=\"outlined\" />\n                  )}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={addSkill}>\n                  Add\n                </Button>\n              </div>\n              <br />\n              {formData.skills.map((skill) => {\n                return (\n                  <>\n                    <Chip\n                      className=\"SkillChip\"\n                      key={skill}\n                      label={skill}\n                      onDelete={() => handleSkillDelete(skill)}\n                    />\n                    <span></span>\n                  </>\n                );\n              })}\n              <br />\n              <br />\n              <br />\n              <br />\n            </>\n          )}\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={validateForm}\n            style={{ marginRight: 20, marginBottom: 160 }}\n          >\n            Update\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => (window.location = \"/\")}\n            style={{ marginRight: 20, marginBottom: 160 }}\n          >\n            Cancel\n          </Button>\n          <br />\n          <br />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { AuthContext } from \"../../App\";\n\nconst defaultListing = {\n  id: \"123456\",\n  title: \"Job Title\",\n  jobType: \"Full time\",\n  maxApps: 10,\n  numApps: 4,\n  maxPos: 10,\n  numAccepted: 1,\n  postingDate: 1611146620579,\n  deadlineDate: 1611146620579,\n  requiredSkills: [\"Python\", \"Data Science\", \"Javascript\"],\n  duration: 3,\n  salary: 5000,\n  numRatings: 4,\n  ratingSum: 17,\n  recruiter: {\n    id: \"1234556\",\n    name: \"XYZ Recruiters\",\n    email: \"xyzrecruiters@recruiter.com\",\n  },\n  applied: false,\n};\n\nconst dt = (x) => {\n  let a = new Date(x);\n  return a.toLocaleString();\n};\n\nfunction JobListing(props) {\n  const [listing, setListing] = useState(\n    props.listing ? props.listing : defaultListing\n  );\n  const [editing, setEditing] = useState(false);\n  const [sop, setSop] = useState(\"\");\n  const { auth, setAuth } = React.useContext(AuthContext);\n\n  const sopNumWords = () => {\n    let words = sop.split(/\\s+/);\n    words.pop();\n    return words.length;\n  };\n\n  const makeApplication = () => {\n    if (sopNumWords() >= 250)\n      return swal(\"Error\", \"SOP must be less than 250 words\", \"error\");\n\n    let url = \"/api/application\";\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    let data = {\n      listingId: listing._id,\n      applicantId: auth.user._id,\n      sop: sop,\n    };\n    axios\n      .post(url, data, config)\n      .then(() => {\n        return swal(\"Application successfully made\", \"\", \"success\").then(\n          () => (window.location = \"/\")\n        );\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.msg) {\n              swal(\"Error\", error.response.data.msg, \"error\");\n            }\n          }\n        } else {\n          swal(\"Error\", \"Something went wrong\", \"error\");\n        }\n      });\n  };\n\n  return (\n    <>\n      <Card style={{ marginBottom: 60 }}>\n        <CardContent>\n          <div>\n            <Typography variant=\"h4\" color=\"textPrimary\" display=\"inline\">\n              {listing.title}\n            </Typography>\n            <Rating\n              readOnly\n              value={listing.ratingSum / listing.numRatings}\n              style={{ float: \"right\" }}\n            />\n          </div>\n          <Typography style={{ marginBottom: -5 }} color=\"textSecondary\">\n            Posted by:{\" \"}\n            <span style={{ color: \"#800080\", fontSize: \"1.1rem\" }}>\n              {listing.recruiter.name}{\" \"}\n            </span>\n          </Typography>\n          <Typography color=\"textPrimary\" style={{ marginBottom: -5 }}>\n            {listing.jobType}\n          </Typography>\n          <Typography color=\"textSecondary\" style={{ marginBottom: -5 }}>\n            Duration:{\" \"}\n            {listing.duration === 0\n              ? \"Indefinite\"\n              : `${listing.duration} months`}\n          </Typography>\n          <Typography color=\"textSecondary\" style={{ marginBottom: 5 }}>\n            Remaining Positions: {listing.maxPos - listing.numAccepted}\n          </Typography>\n          <div style={{ marginBottom: 5 }}>\n            {listing.requiredSkills.map((skill) => {\n              return (\n                <>\n                  <Chip key={skill} label={skill} />{\" \"}\n                </>\n              );\n            })}\n          </div>\n          <Typography\n            variant=\"h4\"\n            style={{ color: \"lightgreen\", marginBottom: -5 }}\n          >\n            ₹{listing.salary}\n          </Typography>\n\n          <span style={{ color: \"red\", fontSize: 14 }}>\n            Apply before {dt(listing.deadlineDate)}\n          </span>\n          {editing && (\n            <FormControl fullWidth style={{ marginTop: 20 }}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                multiline\n                rows=\"8\"\n                label=\"Statement of purpose\"\n                name=\"bio\"\n                value={sop}\n                onChange={(e) => setSop(e.target.value)}\n              />\n              <FormHelperText>{sopNumWords()}/250</FormHelperText>\n            </FormControl>\n          )}\n          {!editing && (\n            <Button\n              variant=\"contained\"\n              style={{\n                float: \"right\",\n                color: \"white\",\n                marginBottom: 10,\n                backgroundColor: listing.applied\n                  ? \"#f50057\"\n                  : listing.maxPos - listing.numAccepted > 0 &&\n                    listing.maxApps - listing.numApps > 0\n                  ? \"#1769aa\"\n                  : \"lightgrey\",\n              }}\n              display=\"inline\"\n              disabled={\n                listing.applied ||\n                !(listing.maxPos - listing.numAccepted) ||\n                !(listing.maxApps - listing.numApps)\n              }\n              onClick={() => setEditing(true)}\n            >\n              {listing.applied\n                ? \"Applied\"\n                : listing.maxPos - listing.numAccepted > 0 &&\n                  listing.maxApps - listing.numApps > 0\n                ? \"Apply\"\n                : \"Full\"}\n            </Button>\n          )}\n          {editing && (\n            <>\n              <Button\n                variant=\"contained\"\n                style={{\n                  float: \"right\",\n                  marginBottom: 10,\n                  color: \"white\",\n                  backgroundColor: \"lightgreen\",\n                }}\n                onClick={makeApplication}\n              >\n                Confirm\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ float: \"right\", marginBottom: 10, marginRight: 10 }}\n                onClick={() => {\n                  setSop(\"\");\n                  setEditing(false);\n                }}\n              >\n                Cancel\n              </Button>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n\nexport default JobListing;\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Navbar from \"../Navbar/Navbar\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport JobListing from \"../JobListing/JobListing\";\nimport \"./FindJobs.css\";\nimport { AuthContext } from \"../../App\";\n\nconst defaultFilters = {\n  searchTerm: \"\",\n  wfh: true,\n  partTime: true,\n  fullTime: true,\n  salaryRange: [0, 100000000],\n  maxDuration: 7,\n  sortField: \"salary\",\n  sortOrder: \"descending\",\n};\n\nfunction FindJobs() {\n  const [filters, setFilters] = useState(defaultFilters);\n  const [listings, setListings] = useState([]);\n  const [maxSalary, setMaxSalary] = useState(10000);\n  const { auth, setAuth } = React.useContext(AuthContext);\n\n  const getRating = (listing) => {\n    if (listing.numRatings === 0) return 0;\n    else return listing.ratingSum / listing.numRatings;\n  };\n\n  useEffect(() => {\n    setFilters({\n      ...filters,\n      salaryRange: [filters.salaryRange[0], maxSalary + 1000],\n    });\n  }, [maxSalary]);\n\n  const fetchJobs = async function () {\n    try {\n      let allListings = await axios.get(\"/api/listing\");\n      allListings = allListings.data.listings;\n\n      allListings = allListings.filter((listing) => {\n        let d = new Date(listing.deadlineDate);\n        return d.getTime() > Date.now() && !listing.deleted;\n      });\n      setMaxSalary(Math.max(...allListings.map((l) => l.salary), 0));\n\n      let myApplications = await axios.get(\n        `/api/application/byapplicant/${auth.user._id}`\n      );\n      let listingsAppliedTo = myApplications.data.applications.map(\n        (application) => application.listingId\n      );\n\n      // Filters\n      let filteredListings = allListings.filter((listing) => {\n        return (\n          listing.title\n            .trim()\n            .toLowerCase()\n            .indexOf(filters.searchTerm.trim().toLowerCase()) !== -1 &&\n          listing.salary <= filters.salaryRange[1] &&\n          listing.salary >= filters.salaryRange[0] &&\n          listing.duration < filters.maxDuration &&\n          ((listing.jobType === \"Full Time\" && filters.fullTime) ||\n            (listing.jobType === \"Part Time\" && filters.partTime) ||\n            (listing.jobType === \"WFH\" && filters.wfh))\n        );\n      });\n\n      //Applied to listings\n      filteredListings = filteredListings.map((listing) => {\n        if (listingsAppliedTo.indexOf(listing._id) !== -1)\n          listing.applied = true;\n        else listing.applied = false;\n        return listing;\n      });\n\n      // Sorting\n      if (filters.sortField === \"rating\") {\n        if (filters.sortOrder === \"ascending\") {\n          filteredListings.sort((a, b) =>\n            getRating(a) < getRating(b) ? -1 : 1\n          );\n        } else {\n          filteredListings.sort((a, b) =>\n            getRating(a) > getRating(b) ? -1 : 1\n          );\n        }\n      } else {\n        if (filters.sortOrder === \"ascending\") {\n          filteredListings.sort((a, b) =>\n            a[filters.sortField] < b[filters.sortField] ? -1 : 1\n          );\n        } else {\n          filteredListings.sort((a, b) =>\n            a[filters.sortField] > b[filters.sortField] ? -1 : 1\n          );\n        }\n      }\n\n      setListings(filteredListings);\n      console.log(filteredListings);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(fetchJobs, []);\n\n  const onFilterChange = (e) => {\n    setFilters({\n      ...filters,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onCheckBoxChange = (e) => {\n    setFilters({\n      ...filters,\n      [e.target.name]: e.target.checked,\n    });\n  };\n\n  const onSalaryRangeChange = (e, newValue) => {\n    console.log(newValue);\n    setFilters({\n      ...filters,\n      salaryRange: newValue,\n    });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"FindJobs\">\n        <div className=\"FilterPanel\">\n          <h1>Search</h1>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            name=\"searchTerm\"\n            placeholder=\"Search term\"\n            value={filters.searchTerm}\n            onChange={onFilterChange}\n          />\n          <br />\n          <br />\n          <br />\n\n          <h1>Filters</h1>\n          <FormControl component=\"fieldset\">\n            <Typography gutterBottom>Job type</Typography>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filters.fullTime}\n                    onChange={onCheckBoxChange}\n                    name=\"fullTime\"\n                  />\n                }\n                label=\"Full Time\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filters.partTime}\n                    onChange={onCheckBoxChange}\n                    name=\"partTime\"\n                  />\n                }\n                label=\"Part Time\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filters.wfh}\n                    onChange={onCheckBoxChange}\n                    name=\"wfh\"\n                  />\n                }\n                label=\"Work From Home\"\n              />\n            </FormGroup>\n          </FormControl>\n          <br />\n          <br />\n          <FormControl>\n            <Typography gutterBottom>Salary (per month)</Typography>\n            <br />\n            <Slider\n              style={{ minWidth: 200 }}\n              value={filters.salaryRange}\n              onChange={onSalaryRangeChange}\n              name=\"salaryRange\"\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"range-slider\"\n              min={0}\n              max={maxSalary + 1000}\n              marks={[\n                { value: 0, label: \"0\" },\n                {\n                  value: (maxSalary + 1000) / 2,\n                  label: ((maxSalary + 1000) / 2).toString(),\n                },\n                {\n                  value: maxSalary + 1000,\n                  label: (maxSalary + 1000).toString(),\n                },\n              ]}\n            />\n          </FormControl>\n          <br />\n          <br />\n          <FormControl>\n            <Typography gutterBottom>Duration less than (months)</Typography>\n            <Select\n              name=\"maxDuration\"\n              value={filters.maxDuration}\n              onChange={onFilterChange}\n            >\n              {[...Array(7).keys()].map((i) => (\n                <MenuItem value={i + 1} key={i + 1}>\n                  {i + 1}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <br />\n          <br />\n          <br />\n\n          <h1>Sort By</h1>\n          <Select\n            name=\"sortField\"\n            value={filters.sortField}\n            onChange={onFilterChange}\n          >\n            <MenuItem value=\"salary\">Salary</MenuItem>\n            <MenuItem value=\"duration\">Duration</MenuItem>\n            <MenuItem value=\"rating\">Rating</MenuItem>\n          </Select>\n          <RadioGroup\n            row\n            value={filters.sortOrder}\n            name=\"sortOrder\"\n            onChange={onFilterChange}\n          >\n            <FormControlLabel\n              value=\"ascending\"\n              control={<Radio />}\n              label=\"Ascending\"\n            />\n            <FormControlLabel\n              value=\"descending\"\n              control={<Radio />}\n              label=\"Descending\"\n            />\n          </RadioGroup>\n          <br />\n          <br />\n          <br />\n          <div className=\"BottomButtons\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: 10 }}\n              onClick={fetchJobs}\n            >\n              Apply\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => setFilters(defaultFilters)}\n            >\n              Reset\n            </Button>\n          </div>\n        </div>\n        <Divider\n          orientation=\"vertical\"\n          flexItem\n          style={{ position: \"fixed\", height: \"100%\" }}\n        />\n        <div className=\"Jobs\">\n          <Typography variant=\"h1\" gutterBottom>\n            Jobs...\n          </Typography>\n          {listings.map((listing) => (\n            <JobListing key={listing._id} listing={listing} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default FindJobs;\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Navbar from \"../Navbar/Navbar\";\nimport \"./MyApplications.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../App\";\nimport swal from \"sweetalert\";\n\nconst toDt = (dt) => {\n  if (!dt) return \"--\";\n  let d = new Date(dt);\n  return d.toDateString();\n};\n\nconst getColor = (status) => {\n  switch (status) {\n    case \"Applied\":\n      return \"black\";\n    case \"Shortlisted\":\n      return \"blue\";\n    case \"Rejected\":\n      return \"red\";\n    case \"Accepted\":\n      return \"green\";\n  }\n};\n\nconst rateButton = (row) => {\n  if (row.status === \"Accepted\") {\n    return (\n      <Rating\n        value={row.rating}\n        name={row.id}\n        onChange={(e, newValue) => {\n          row.rating = newValue;\n        }}\n      />\n    );\n  }\n  return \"--\";\n};\n\nconst defaultRows = [\n  {\n    title: \"Big Job\",\n    recruiterName: \"XYZ recruiter\",\n    status: \"Applied\",\n    salary: 2000,\n    closureDate: null,\n  },\n  {\n    title: \"Amazing Job\",\n    recruiterName: \"XYZ recruiter\",\n    status: \"Shortlisted\",\n    salary: 2000,\n    closureDate: null,\n  },\n  {\n    title: \"YOu Want This Job\",\n    recruiterName: \"XYZ recruiter\",\n    status: \"Rejected\",\n    salary: 2000,\n    closureDate: 1611149627670,\n  },\n  {\n    title: \"JobbbNiggabbb\",\n    recruiterName: \"XYZ recruiter\",\n    status: \"Accepted\",\n    salary: 2000,\n    closureDate: 1611149627670,\n    rating: 4.2,\n  },\n];\n\nfunction MyApplications() {\n  const [rows, setRows] = useState([]);\n  const { auth, setAuth } = React.useContext(AuthContext);\n\n  const updateRatingLocal = (row, newRating) => {\n    let newRows = rows.map((r) => {\n      if (r.id === row.id) r.rating = newRating;\n      return r;\n    });\n    setRows(newRows);\n  };\n\n  const updateRating = (row, newRating) => {\n    let oldRating = row.rating;\n    updateRatingLocal(row, newRating);\n    let url = \"/api/rating/listing\";\n    let data = {\n      value: newRating,\n      listingId: row.listingId,\n      applicantId: auth.user._id,\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    axios\n      .post(url, data, config)\n      .then((response) => {\n        swal(\"Rating changed\", \"\", \"success\");\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.msg) {\n              swal(\"Error\", error.response.data.msg, \"error\").then(() =>\n                updateRatingLocal(row, oldRating)\n              );\n            }\n          }\n        } else {\n          swal(\"Error\", \"Something went wrong\", \"error\").then(() =>\n            updateRatingLocal(row, oldRating)\n          );\n        }\n      });\n  };\n\n  useEffect(async function () {\n    try {\n      let applications = await axios.get(\n        `/api/application/byapplicant/${auth.user._id}`\n      );\n      applications = applications.data.applications;\n      console.log(applications);\n      let appliedListingIds = applications.map(\n        (application) => application.listingId\n      );\n\n      let listings = await axios.get(\"api/listing\");\n      listings = listings.data.listings.filter(\n        (listing) => appliedListingIds.indexOf(listing._id) !== -1\n      );\n\n      let ratings = await axios.get(\n        `/api/rating/listing/byapplicant/${auth.user._id}`\n      );\n      ratings = ratings.data.ratings;\n      //console.log(ratings);\n\n      let rows = applications.map((application) => {\n        let listing = listings.find((l) => l._id === application.listingId);\n        let rating = 0;\n        if (ratings) rating = ratings.find((r) => r.listingId === listing._id);\n        console.log(rating);\n        let row = {\n          id: application._id,\n          title: listing.title,\n          recruiterName: listing.recruiter.name,\n          status: application.status,\n          salary: listing.salary,\n          closeDate: application.closeDate,\n          rating: rating ? rating.value : 0,\n          listingId: listing._id,\n          /*\n          rating:\n            listing.numRatings === 0\n              ? 0\n              : listing.ratingSum / listing.numRatings,\n          */\n        };\n        return row;\n      });\n      setRows(rows);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"MyApplications\">\n        <Typography variant=\"h1\" gutterBottom>\n          My Applications\n        </Typography>\n        <br />\n        <br />\n        <TableContainer component={Paper}>\n          <Table className=\"ApplicationTable\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Job Title</TableCell>\n                <TableCell align=\"right\">Recruiter Name</TableCell>\n                <TableCell align=\"right\">Status</TableCell>\n                <TableCell align=\"right\">Salary per month</TableCell>\n                <TableCell align=\"right\">Date of Joining</TableCell>\n                <TableCell align=\"right\">Rate</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.title}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.recruiterName}</TableCell>\n                  <TableCell\n                    align=\"right\"\n                    style={{ color: getColor(row.status) }}\n                  >\n                    {row.status}\n                  </TableCell>\n                  <TableCell align=\"right\">₹{row.salary}</TableCell>\n                  <TableCell align=\"right\">\n                    {row.status === \"Accepted\" ? toDt(row.closeDate) : \"--\"}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {row.status === \"Accepted\" ? (\n                      <Rating\n                        value={row.rating}\n                        name={row.id}\n                        onChange={(e, newRating) =>\n                          updateRating(row, newRating)\n                        }\n                      />\n                    ) : (\n                      \"--\"\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </>\n  );\n}\n\nexport default MyApplications;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport \"./CreateListing.css\";\nimport Navbar from \"../Navbar/Navbar\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../App\";\n\nconst defaultFormData = {\n  title: \"\",\n  requiredSkills: [],\n  currSkill: \"\",\n  jobType: \"Full Time\",\n  maxApps: 0,\n  maxPos: 0,\n  duration: 0,\n  salary: 1000,\n  deadlineDate: Date.now(),\n};\n\nconst languageList = [\n  \"Python\",\n  \"C\",\n  \"Javascript\",\n  \"C++\",\n  \"HTML\",\n  \"CSS\",\n  \"Java\",\n  \"Rust\",\n  \"Kotlin\",\n  \"PHP\",\n];\n\nfunction CreateListing() {\n  const [formData, setFormData] = useState(defaultFormData);\n  const { auth, setAuth } = React.useContext(AuthContext);\n\n  const addSkill = () => {\n    if (!formData.currSkill.trim())\n      return swal(\"Error\", \"skill can't be empty\", \"error\");\n    let newSkills = formData.requiredSkills;\n    newSkills.push(formData.currSkill);\n    setFormData({\n      ...formData,\n      requiredSkills: newSkills,\n      currSkill: \"\",\n    });\n  };\n\n  const handleSkillDelete = (skill) => {\n    let newSkills = formData.requiredSkills.filter((sk) => sk !== skill);\n    setFormData({\n      ...formData,\n      requiredSkills: newSkills,\n    });\n  };\n\n  const getDate = (d) => {\n    let dt = new Date(d);\n    return dt;\n  };\n\n  const onChangeHandler = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleDateChange = (newDate) => {\n    setFormData({\n      ...formData,\n      deadlineDate: newDate,\n    });\n  };\n\n  const createListing = () => {\n    let url = \"/api/listing\";\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    let data = {\n      ...formData,\n      maxPos: Number(formData.maxPos),\n      maxApps: Number(formData.maxApps),\n      salary: Number(formData.salary),\n      recruiter: auth.user,\n    };\n\n    axios\n      .post(url, data, config)\n      .then((response) => {\n        //setFormData(response.data.listing);\n        swal(\"Listing created successfully\", \"\", \"success\");\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.msg) {\n              swal(\"Error\", error.response.data.msg, \"error\");\n            }\n          }\n        } else {\n          swal(\"Error\", \"Something went wrong\", \"error\");\n        }\n      });\n  };\n\n  const validateForm = () => {\n    if (\n      Number(formData.maxPos) === NaN ||\n      Number(formData.maxApps) === NaN ||\n      Number(formData.salary) === NaN\n    ) {\n      return swal(\"Error\", \"Please enter NUMBERS\", \"error\");\n    }\n    if (\n      Number(formData.maxPos) <= 0 ||\n      Number(formData.maxApps) <= 0 ||\n      formData.salary <= 0\n    )\n      return swal(\"Error\", \"Value greater than 0 required\", \"error\");\n    if (Number(formData.maxPos) > Number(formData.maxApps)) {\n      console.log(formData.maxPos);\n      console.log(formData.maxApps);\n      return swal(\n        \"Error\",\n        \"Positions can't be mor than allowed applications\",\n        \"error\"\n      );\n    }\n    if (formData.deadlineDate < Date.now())\n      return swal(\"Error\", \"Deadline must be in future\", \"error\");\n    createListing();\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"CreateListing\">\n        <div className=\"CreateListing-side\"></div>\n        <div className=\"CreateListing-header\">\n          <Typography variant=\"h1\">Create Listing</Typography>\n        </div>\n        <div className=\"CreateListing-main\">\n          <form autoComplete=\"off\">\n            <TextField\n              variant=\"outlined\"\n              label=\"Job Title\"\n              name=\"title\"\n              value={formData.title}\n              onChange={onChangeHandler}\n              className=\"FormElement\"\n            />\n            <FormControl variant=\"outlined\" className=\"FormElement\">\n              <InputLabel>Job Type</InputLabel>\n              <Select\n                name=\"jobType\"\n                value={formData.jobType}\n                onChange={onChangeHandler}\n                label=\"Job Type\"\n              >\n                <MenuItem value=\"Full Time\">Full Time</MenuItem>\n                <MenuItem value=\"Part Time\">Part Time</MenuItem>\n                <MenuItem value=\"WFH\">Work From Home</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" className=\"FormElement\">\n              <InputLabel>Duration</InputLabel>\n              <Select\n                name=\"duration\"\n                value={formData.duration}\n                onChange={onChangeHandler}\n                label=\"Maximum Duration\"\n              >\n                {[...Array(7).keys()].map((i) => (\n                  <MenuItem value={i} key={i}>\n                    {i}\n                    {!i && \"(Indefinite)\"}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <br />\n            <TextField\n              variant=\"outlined\"\n              label=\"Salary (₹)\"\n              name=\"salary\"\n              value={formData.salary}\n              onChange={onChangeHandler}\n              className=\"FormElement\"\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Number of positions\"\n              name=\"maxPos\"\n              value={formData.maxPos}\n              onChange={onChangeHandler}\n              className=\"FormElement\"\n              className=\"FormElement\"\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Maximum Applications\"\n              name=\"maxApps\"\n              value={formData.maxApps}\n              onChange={onChangeHandler}\n              className=\"FormElement\"\n            />\n            <br />\n            <br />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                className=\"FormElement\"\n                disableToolbar\n                variant=\"inline\"\n                inputVariant=\"outlined\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Deadline date\"\n                value={getDate(formData.deadlineDate)}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n              <KeyboardTimePicker\n                className=\"FormElement\"\n                margin=\"normal\"\n                id=\"time-picker\"\n                label=\"Deadline time\"\n                inputVariant=\"outlined\"\n                value={getDate(formData.deadlineDate)}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change time\",\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </form>\n          <Typography variant=\"h5\">Required Skills</Typography>\n          <br />\n          <div className=\"SkillForm\">\n            <Autocomplete\n              freeSolo\n              options={languageList}\n              name=\"currSkill\"\n              inputValue={formData.currSkill}\n              onInputChange={(e, newValue) => {\n                setFormData({ ...formData, currSkill: newValue });\n              }}\n              renderInput={(params) => (\n                <TextField {...params} label=\"Skill\" variant=\"outlined\" />\n              )}\n            />\n\n            <Button variant=\"contained\" color=\"primary\" onClick={addSkill}>\n              Add\n            </Button>\n          </div>\n          <br />\n          {formData.requiredSkills.map((skill) => {\n            return (\n              <>\n                <Chip\n                  className=\"SkillChip\"\n                  key={skill}\n                  label={skill}\n                  onDelete={() => handleSkillDelete(skill)}\n                />\n                <span></span>\n              </>\n            );\n          })}\n          <br />\n          <br />\n          <br />\n          <br />\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={validateForm}\n            style={{ marginRight: 20 }}\n          >\n            Post\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => setFormData(defaultFormData)}\n          >\n            Cancel\n          </Button>\n          <br />\n          <br />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CreateListing;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Chip from \"@material-ui/core/Chip\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { AuthContext } from \"../../App\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nconst defaultListing = {\n  id: \"123456\",\n  title: \"Job Title\",\n  jobType: \"Full time\",\n  maxApps: 20,\n  numApps: 4,\n  maxPos: 10,\n  numAccepted: 1,\n  postingDate: 1611146620579,\n  deadlineDate: 1611146620579,\n  requiredSkills: [\"Python\", \"Data Science\", \"Javascript\"],\n  duration: 3,\n  salary: 5000,\n  numRatings: 4,\n  ratingSum: 17,\n  recruiter: {\n    id: \"1234556\",\n    name: \"XYZ Recruiters\",\n    email: \"xyzrecruiters@recruiter.com\",\n  },\n};\n\nconst dt = (x) => {\n  let a = new Date(x);\n  return a.toLocaleString();\n};\n\nfunction EditableListing(props) {\n  const [editing, setEditing] = useState(false);\n  const [listing, setListing] = useState(\n    props.listing ? props.listing : defaultListing\n  );\n\n  const getDate = (d) => {\n    let dt = new Date(d);\n    return dt;\n  };\n\n  const handleDateChange = (newDate) => {\n    setListing({\n      ...listing,\n      deadlineDate: newDate,\n    });\n  };\n\n  const onChangeHandler = (e) => {\n    setListing({\n      ...listing,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const deleteListing = () => {\n    let url = `/api/listing/${listing._id}`;\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    axios\n      .delete(url, config)\n      .then((response) => {\n        swal(\"Listing deleted successfully\", \"\", \"success\").then(() =>\n          location.reload()\n        );\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.msg) {\n              swal(\"Error\", error.response.data.msg, \"error\");\n            }\n          }\n        } else {\n          console.log(error);\n          swal(\"Error\", \"Something went wrong\", \"error\");\n        }\n      });\n  };\n\n  const updateListing = () => {\n    let url = `/api/listing/${listing._id}`;\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    let data = {\n      maxApps: listing.maxApps,\n      maxPos: listing.maxPos,\n      deadlineDate: listing.deadlineDate,\n    };\n    axios\n      .put(url, data, config)\n      .then((response) => {\n        swal(\"Listing updated successfully\", \"\", \"success\");\n        setEditing(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.msg) {\n              swal(\"Error\", error.response.data.msg, \"error\");\n            } else if (error.response.data.errors) {\n              swal(\"Error\", error.response.data.errors.join(\"<br/>\"), \"error\");\n            }\n          }\n        } else {\n          console.log(error);\n          swal(\"Error\", \"Something went wrong\", \"error\");\n        }\n      });\n  };\n\n  const validateForm = () => {\n    if (Number(listing.maxPos) === NaN || Number(listing.maxApps) === NaN) {\n      return swal(\"Error\", \"Please enter NUMBERS\", \"error\");\n    }\n    if (Number(listing.maxPos) <= 0 || Number(listing.maxApps) <= 0)\n      return swal(\"Error\", \"Value greater than 0 required\", \"error\");\n    if (Number(listing.maxPos) > Number(listing.maxApps)) {\n      return swal(\n        \"Error\",\n        \"Positions can't be more than allowed applications\",\n        \"error\"\n      );\n    }\n    if (listing.deadlineDate < Date.now())\n      return swal(\"Error\", \"Deadline must be in future\", \"error\");\n    updateListing();\n  };\n\n  const editables = () => {\n    if (editing) {\n      return (\n        <>\n          <TextField\n            variant=\"outlined\"\n            label=\"Number of positions\"\n            name=\"maxPos\"\n            value={listing.maxPos}\n            onChange={onChangeHandler}\n            className=\"FormElement\"\n            className=\"FormElement\"\n          />\n          <TextField\n            variant=\"outlined\"\n            label=\"Maximum Applications\"\n            name=\"maxApps\"\n            value={listing.maxApps}\n            onChange={onChangeHandler}\n            className=\"FormElement\"\n          />\n          <br />\n          <br />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              className=\"FormElement\"\n              disableToolbar\n              variant=\"inline\"\n              inputVariant=\"outlined\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              label=\"Deadline date\"\n              value={getDate(listing.deadlineDate)}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n            <KeyboardTimePicker\n              className=\"FormElement\"\n              margin=\"normal\"\n              id=\"time-picker\"\n              label=\"Deadline time\"\n              inputVariant=\"outlined\"\n              value={getDate(listing.deadlineDate)}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change time\",\n              }}\n            />\n          </MuiPickersUtilsProvider>\n          <br />\n          <Button\n            style={{\n              float: \"right\",\n              marginBottom: 20,\n              marginRight: 10,\n              backgroundColor: \"lightgreen\",\n              color: \"white\",\n            }}\n            onClick={validateForm}\n          >\n            Update\n          </Button>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography style={{ marginBottom: -5 }} color=\"textSecondary\">\n            Deadline: {dt(listing.deadlineDate)}{\" \"}\n          </Typography>\n          <Typography color=\"textSecondary\" style={{ marginBottom: -5 }}>\n            Maximum Applications: {listing.maxApps}\n          </Typography>\n          <Typography color=\"textSecondary\" style={{ marginBottom: 5 }}>\n            Number of positions: {listing.maxPos}\n          </Typography>\n          <Link component={RouterLink} to={`applications/${listing._id}`}>\n            <Button\n              style={{\n                float: \"left\",\n                marginBottom: 20,\n                marginLeft: 0,\n              }}\n              color=\"primary\"\n            >\n              View Applicants\n            </Button>\n          </Link>\n          <Button\n            style={{\n              float: \"right\",\n              marginBottom: 20,\n              marginRight: 10,\n            }}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={deleteListing}\n          >\n            Delete\n          </Button>\n          <Button\n            style={{\n              float: \"right\",\n              marginBottom: 20,\n              marginRight: 10,\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setEditing(true)}\n          >\n            Edit\n          </Button>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Card style={{ marginBottom: 60 }}>\n      <CardContent>\n        <div>\n          <Typography variant=\"h4\" color=\"textPrimary\" display=\"inline\">\n            {listing.title}\n          </Typography>\n          <Rating\n            readOnly\n            value={listing.ratingSum / listing.numRatings}\n            style={{ float: \"right\" }}\n          />\n        </div>\n        <Typography style={{ marginBottom: -5 }} color=\"textSecondary\">\n          Posted by:{\" \"}\n          <span style={{ color: \"#800080\", fontSize: \"1.1rem\" }}>\n            {listing.recruiter.name}{\" \"}\n          </span>\n        </Typography>\n        <Typography style={{ marginBottom: -5 }} color=\"textSecondary\">\n          Date of Posting: {dt(listing.postingDate)}{\" \"}\n        </Typography>\n        <Typography color=\"textPrimary\" style={{ marginBottom: -5 }}>\n          {listing.jobType}\n        </Typography>\n        <Typography color=\"textSecondary\" style={{ marginBottom: -5 }}>\n          Duration:{\" \"}\n          {listing.duration === 0 ? \"Indefinite\" : `${listing.duration} months`}\n        </Typography>\n        <Typography color=\"textSecondary\" style={{ marginBottom: -5 }}>\n          Remaining Positions: {listing.maxPos - listing.numAccepted}\n        </Typography>\n        <Typography color=\"textSecondary\" style={{ marginBottom: 5 }}>\n          Number of Applications: {listing.numApps}\n        </Typography>\n        <div style={{ marginBottom: 5 }}>\n          {listing.requiredSkills.map((skill) => {\n            return (\n              <>\n                <Chip key={skill} label={skill} />{\" \"}\n              </>\n            );\n          })}\n        </div>\n        <Typography\n          variant=\"h4\"\n          style={{ color: \"lightgreen\", marginBottom: 0 }}\n        >\n          ₹{listing.salary}\n        </Typography>\n        {editables()}\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default EditableListing;\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\n\nimport EditableListing from \"../EditableListing/EditableListing\";\nimport Navbar from \"../Navbar/Navbar\";\nimport \"./MyListings.css\";\nimport { AuthContext } from \"../../App\";\n\nfunction MyListings() {\n  const [listings, setListings] = useState([]);\n  const { auth, setAuth } = React.useContext(AuthContext);\n  useEffect(() => {\n    let url = `/api/listing/byrecruiter/${auth.user._id}`;\n    axios\n      .get(url)\n      .then((response) => {\n        setListings(\n          response.data.listings.filter((listing) => {\n            return !listing.deleted && listing.numAccepted < listing.maxPos;\n          })\n        );\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  return (\n    <>\n      <Navbar />\n      <div className=\"MyListings\">\n        <div className=\"Listings\">\n          <Typography variant=\"h1\" gutterBottom>\n            My Listings\n          </Typography>\n          {listings.map((listing) => (\n            <EditableListing key={listing._id} listing={listing} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default MyListings;\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Navbar from \"../Navbar/Navbar\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Applications.css\";\nimport axios from \"axios\";\n\nconst toDt = (dt) => {\n  if (!dt) return \"--\";\n  let d = new Date(dt);\n  return d.toDateString();\n};\n\nconst getColor = (status) => {\n  switch (status) {\n    case \"Applied\":\n      return \"black\";\n    case \"Shortlisted\":\n      return \"blue\";\n    case \"Rejected\":\n      return \"red\";\n    case \"Accepted\":\n      return \"green\";\n  }\n};\n\nconst defaultApplication = {\n  name: \"Guy Name\",\n  education: [\n    {\n      instituteName: \"SXBA\",\n      startYear: \"2014\",\n      endYear: \"2018\",\n    },\n    {\n      instituteName: \"Pace\",\n      startYear: \"2019\",\n      endYear: \"2020\",\n    },\n  ],\n  skills: [\"Python\", \"C\", \"C++\", \"Java\"],\n  sop:\n    \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n  applicationDate: Date.now(),\n  rating: 3.45,\n  status: \"Applied\",\n};\n\nconst defaultRows = [\n  defaultApplication,\n  defaultApplication,\n  defaultApplication,\n  defaultApplication,\n];\n\nconst defaultSort = {\n  sortField: \"name\",\n  sortOrder: \"ascending\",\n};\n\nfunction Applications() {\n  const [sort, setSort] = useState(defaultSort);\n  const [rows, setRows] = useState([]);\n  const { listingId } = useParams();\n\n  const getApplications = async function () {\n    try {\n      let applications = await axios.get(\n        `/api/application/bylisting/${listingId}`\n      );\n      applications = applications.data.applications;\n      console.log(applications);\n\n      let applicants = await axios.get(`/api/applicant/bylisting/${listingId}`);\n      applicants = applicants.data.users;\n      console.log(applicants);\n\n      let rows = applications.map((application) => {\n        let applicant = applicants.find(\n          (a) => a._id === application.applicantId\n        );\n        let row = {\n          id: application._id,\n          name: applicant.name,\n          education: applicant.education,\n          skills: applicant.skills,\n          sop: application.sop,\n          applicationDate: application.appDate,\n          rating:\n            applicant.numRatings === 0\n              ? 0\n              : applicant.ratingSum / applicant.numRatings,\n          status: application.status,\n        };\n        return row;\n      });\n      rows.sort((a, b) =>\n        a[sort.sortField] < b[sort.sortField]\n          ? sort.sortOrder === \"ascending\"\n            ? -1\n            : 1\n          : sort.sortOrder === \"ascending\"\n          ? 1\n          : -1\n      );\n      setRows(rows);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(getApplications, []);\n\n  const updateApplication = (applicationId, newStatus) => {\n    let url = `/api/application/${applicationId}`;\n    let data = { status: newStatus };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    axios\n      .put(url, data, config)\n      .then(() => {\n        swal(`Candidate ${newStatus}`, \"\", \"success\").then(() =>\n          location.reload()\n        );\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.msg) {\n              swal(\"Error\", error.response.data.msg, \"error\");\n            }\n          }\n        } else {\n          swal(\"Error\", \"Something went wrong\", \"error\");\n        }\n      });\n  };\n\n  const actionButtons = (row) => {\n    if (row.status === \"Applied\") {\n      return (\n        <>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => updateApplication(row.id, \"Shortlisted\")}\n          >\n            Shortlist\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => updateApplication(row.id, \"Rejected\")}\n          >\n            Reject\n          </Button>\n        </>\n      );\n    } else if (row.status === \"Shortlisted\") {\n      return (\n        <>\n          <Button\n            variant=\"contained\"\n            style={{ color: \"white\", backgroundColor: \"lightgreen\" }}\n            onClick={() => updateApplication(row.id, \"Accepted\")}\n          >\n            Accept\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => updateApplication(row.id, \"Rejected\")}\n          >\n            Reject\n          </Button>\n        </>\n      );\n    }\n    return \"--\";\n  };\n\n  const onSortChange = (e) => {\n    setSort({\n      ...sort,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"Applications\">\n        <div className=\"FilterPanel\">\n          <h1>Sort By</h1>\n          <Select\n            name=\"sortField\"\n            value={sort.sortField}\n            onChange={onSortChange}\n          >\n            <MenuItem value=\"name\">Name</MenuItem>\n            <MenuItem value=\"applicationDate\">Application Date</MenuItem>\n            <MenuItem value=\"rating\">Rating</MenuItem>\n          </Select>\n          <RadioGroup\n            row\n            value={sort.sortOrder}\n            name=\"sortOrder\"\n            onChange={onSortChange}\n          >\n            <FormControlLabel\n              value=\"ascending\"\n              control={<Radio />}\n              label=\"Ascending\"\n            />\n            <FormControlLabel\n              value=\"descending\"\n              control={<Radio />}\n              label=\"Descending\"\n            />\n          </RadioGroup>\n          <br />\n          <br />\n          <div className=\"BottomButtons\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: 10 }}\n              onClick={getApplications}\n            >\n              Apply\n            </Button>\n          </div>\n        </div>\n        <Divider\n          orientation=\"vertical\"\n          flexItem\n          style={{ position: \"fixed\", height: \"100%\" }}\n        />\n        <div className=\"MyApplications\">\n          <Typography variant=\"h1\" gutterBottom>\n            Applications\n          </Typography>\n          <br />\n          <br />\n          <TableContainer component={Paper}>\n            <Table className=\"ApplicationTable\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"right\">Applicant Name</TableCell>\n                  <TableCell align=\"right\">Skills</TableCell>\n                  <TableCell align=\"right\">Education</TableCell>\n                  <TableCell align=\"right\">Application Date</TableCell>\n                  <TableCell align=\"right\">SOP</TableCell>\n                  <TableCell align=\"right\">Rating</TableCell>\n                  <TableCell align=\"right\">Status</TableCell>\n                  <TableCell align=\"right\">Action</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <TableRow key={row.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.name}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <List dense>\n                        {row.skills.map((skill) => (\n                          <ListItem key={`${skill}${row.name}`}>\n                            <ListItemText primary={skill} />\n                          </ListItem>\n                        ))}\n                      </List>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <List dense>\n                        {row.education.map((edu) => (\n                          <ListItem\n                            key={`${edu.instituteName}${edu.startYear}-${edu.endYear}`}\n                          >\n                            <ListItemText\n                              primary={edu.instituteName}\n                              secondary={`${edu.startYear}-${edu.endYear}`}\n                            />\n                          </ListItem>\n                        ))}\n                      </List>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {toDt(row.applicationDate)}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.sop}</TableCell>\n                    <TableCell align=\"right\">\n                      <Rating readOnly value={row.rating} />\n                    </TableCell>\n                    <TableCell\n                      align=\"right\"\n                      style={{ color: getColor(row.status) }}\n                    >\n                      {row.status}\n                    </TableCell>\n                    <TableCell align=\"right\">{actionButtons(row)}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Applications;\n","import React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Navbar from \"../Navbar/Navbar\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { AuthContext } from \"../../App\";\nimport \"./AcceptedEmployees.css\";\n\nconst toDt = (dt) => {\n  if (!dt) return \"--\";\n  let d = new Date(dt);\n  return d.toDateString();\n};\n\nconst getColor = (status) => {\n  switch (status) {\n    case \"Applied\":\n      return \"black\";\n    case \"Shortlisted\":\n      return \"blue\";\n    case \"Rejected\":\n      return \"red\";\n    case \"Accepted\":\n      return \"green\";\n  }\n};\n\nconst actionButtons = (row) => {\n  if (row.status === \"Applied\") {\n    return (\n      <>\n        <Button variant=\"contained\" color=\"primary\">\n          Shortlist\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Reject\n        </Button>\n      </>\n    );\n  } else if (row.status === \"Shortlisted\") {\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          style={{ color: \"white\", backgroundColor: \"lightgreen\" }}\n        >\n          Accept\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Reject\n        </Button>\n      </>\n    );\n  }\n  return \"--\";\n};\n\nconst application = {\n  name: \"Guy Name\",\n  jobType: \"Part time\",\n  joiningDate: Date.now(),\n  rating: 3.45,\n  title: \"Job Title\",\n};\n\nconst defaultRows = [application, application, application, application];\n\nconst defaultSort = {\n  sortField: \"name\",\n  sortOrder: \"ascending\",\n};\n\nfunction AcceptedEmployees() {\n  const [sort, setSort] = useState(defaultSort);\n  const [rows, setRows] = useState([]);\n  const { auth, setAuth } = React.useContext(AuthContext);\n\n  const getEmployees = async function () {\n    try {\n      // Get from backend\n      let applicants = await axios.get(\n        `/api/applicant/byrecruiter/${auth.user._id}`\n      );\n      applicants = applicants.data.applicants;\n\n      let ratings = await axios.get(\n        `/api/rating/applicant/byrecruiter/${auth.user._id}`\n      );\n      ratings = ratings.data.ratings;\n\n      applicants = applicants.map((applicant) => {\n        let myRating = ratings.find((r) => r.applicantId === applicant.id);\n        if (myRating) applicant.myRating = myRating.value;\n        else applicant.myRating = 0;\n        return applicant;\n      });\n      //Sort\n      applicants.sort((a, b) =>\n        a[sort.sortField] < b[sort.sortField]\n          ? sort.sortOrder === \"ascending\"\n            ? -1\n            : 1\n          : sort.sortOrder === \"ascending\"\n          ? 1\n          : -1\n      );\n      console.log(applicants);\n      setRows(applicants);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateMyRatingLocal = (row, newRating) => {\n    let newRows = rows.map((r) => {\n      if (r.id === row.id) r.myRating = newRating;\n      return r;\n    });\n    setRows(newRows);\n  };\n\n  const updateMyRating = (row, newRating) => {\n    let oldRating = row.myRating;\n    updateMyRatingLocal(row, newRating);\n    let url = \"/api/rating/applicant\";\n    let data = {\n      value: newRating,\n      applicantId: row.id,\n      recruiterId: auth.user._id,\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    axios\n      .post(url, data, config)\n      .then((response) => {\n        swal(\"Rating changed\", \"\", \"success\").then(() => getEmployees());\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.msg) {\n              swal(\"Error\", error.response.data.msg, \"error\").then(() =>\n                updateMyRatingLocal(row, oldRating)\n              );\n            }\n          }\n        } else {\n          swal(\"Error\", \"Something went wrong\", \"error\").then(() =>\n            updateMyRatingLocal(row, oldRating)\n          );\n        }\n      });\n  };\n\n  useEffect(getEmployees, []);\n  //useEffect(getEmployees, [sort]);\n\n  const onSortChange = (e) => {\n    setSort({\n      ...sort,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"AcceptedEmployees\">\n        <div className=\"FilterPanel\">\n          <h1>Sort By</h1>\n          <Select\n            name=\"sortField\"\n            value={sort.sortField}\n            onChange={onSortChange}\n          >\n            <MenuItem value=\"name\">Name</MenuItem>\n            <MenuItem value=\"title\">Job Title</MenuItem>\n            <MenuItem value=\"joiningDate\">Joining Date</MenuItem>\n            <MenuItem value=\"rating\">Rating</MenuItem>\n          </Select>\n          <RadioGroup\n            row\n            value={sort.sortOrder}\n            name=\"sortOrder\"\n            onChange={onSortChange}\n          >\n            <FormControlLabel\n              value=\"ascending\"\n              control={<Radio />}\n              label=\"Ascending\"\n            />\n            <FormControlLabel\n              value=\"descending\"\n              control={<Radio />}\n              label=\"Descending\"\n            />\n          </RadioGroup>\n          <br />\n          <br />\n          <div className=\"BottomButtons\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: 10 }}\n              onClick={getEmployees}\n            >\n              Apply\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => {\n                setSort(defaultSort);\n                //getEmployees();\n              }}\n            >\n              Reset\n            </Button>\n          </div>\n        </div>\n        <Divider\n          orientation=\"vertical\"\n          flexItem\n          style={{ position: \"fixed\", height: \"100%\" }}\n        />\n        <div className=\"Employees\">\n          <Typography variant=\"h1\" gutterBottom>\n            Accepted Employees\n          </Typography>\n          <br />\n          <br />\n          <TableContainer component={Paper}>\n            <Table className=\"ApplicationTable\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"right\">Applicant Name</TableCell>\n                  <TableCell align=\"right\">Joining date</TableCell>\n                  <TableCell align=\"right\">Job Type</TableCell>\n                  <TableCell align=\"right\">Job Title</TableCell>\n                  <TableCell align=\"right\">Rating</TableCell>\n                  <TableCell align=\"right\">Rate</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.name}\n                    </TableCell>\n                    <TableCell align=\"right\">{toDt(row.joiningDate)}</TableCell>\n                    <TableCell align=\"right\">{row.jobType}</TableCell>\n                    <TableCell align=\"right\">{row.title}</TableCell>\n                    <TableCell align=\"right\">\n                      <Rating readOnly value={row.rating} precision={0.25} />\n                    </TableCell>\n                    <TableCell>\n                      <Rating\n                        name={row.id}\n                        value={row.myRating}\n                        onChange={(e, newRating) =>\n                          updateMyRating(row, newRating)\n                        }\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AcceptedEmployees;\n","import LoadingScreen from \"./components/LoadingScreen/LoadingScreen\";\nimport Home from \"./components/Home/Home\";\nimport Profile from \"./components/Profile/Profile\";\nimport FindJobs from \"./components/FindJobs/FindJobs\";\nimport MyApplications from \"./components/MyApplications/MyApplications\";\nimport CreateListing from \"./components/CreateListing/CreateListing\";\nimport MyListings from \"./components/MyListings/MyListings\";\nimport Applications from \"./components/Applications/Applications\";\nimport AcceptedEmployees from \"./components/AcceptedEmployees/AcceptedEmployees\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst defaultAuth = {\n  loggedIn: false,\n  token: {},\n  user: {},\n  userType: \"\",\n};\n\nexport const AuthContext = React.createContext(null);\n\nfunction App() {\n  const [auth, setAuth] = useState(defaultAuth);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      localStorage.getItem(\"token\") &&\n      localStorage.getItem(\"userType\") &&\n      localStorage.getItem(\"user\")\n    ) {\n      let userType = localStorage.getItem(\"userType\");\n      let user = JSON.parse(localStorage.getItem(\"user\"));\n      let token = localStorage.getItem(\"token\");\n      if (userType === \"Recruiter\" || userType === \"Applicant\") {\n        let url = `/api/auth/${userType}/${user._id}`;\n        let config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-auth-token\": token,\n          },\n        };\n        //setLoading(true);\n        axios\n          .get(url, config)\n          .then((response) => {\n            setAuth({\n              loggedIn: true,\n              user: user,\n              token: token,\n              userType: userType,\n            });\n          })\n          .catch((error) => {\n            localStorage.removeItem(\"user\");\n            localStorage.removeItem(\"userType\");\n            localStorage.removeItem(\"token\");\n            setAuth(defaultAuth);\n          });\n      } else {\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"userType\");\n        localStorage.removeItem(\"token\");\n        setAuth(defaultAuth);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 500);\n  }, [auth]);\n\n  if (loading) return <LoadingScreen />;\n  else\n    return (\n      <AuthContext.Provider value={{ auth, setAuth }}>\n        <Switch>\n          <Route path=\"/acceptedemployees\">\n            {() => {\n              if (auth.loggedIn && auth.userType === \"Recruiter\")\n                return <AcceptedEmployees />;\n              else return <Redirect to=\"/\" />;\n            }}\n          </Route>\n          <Route path=\"/applications/:listingId\">\n            {() => {\n              if (auth.loggedIn && auth.userType === \"Recruiter\")\n                return <Applications />;\n              else return <Redirect to=\"/\" />;\n            }}\n          </Route>\n          <Route path=\"/myapplications\">\n            {() => {\n              if (auth.loggedIn && auth.userType === \"Applicant\")\n                return <MyApplications />;\n              else return <Redirect to=\"/\" />;\n            }}\n          </Route>\n          <Route path=\"/mylistings\">\n            {() => {\n              if (auth.loggedIn && auth.userType === \"Recruiter\")\n                return <MyListings />;\n              else return <Redirect to=\"/\" />;\n            }}\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/\">\n            {() => {\n              if (auth.loggedIn) {\n                if (auth.userType === \"Recruiter\") {\n                  return <CreateListing />;\n                } else {\n                  return <FindJobs />;\n                }\n              } else return <Home />;\n            }}\n          </Route>\n        </Switch>\n      </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}